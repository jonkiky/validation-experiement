===========================================================================
junit.framework.Assert:::OBJECT
===========================================================================
junit.framework.Assert.Assert():::EXIT
===========================================================================
junit.framework.Assert.assertEquals(boolean, boolean):::ENTER
expected == actual
===========================================================================
junit.framework.Assert.assertEquals(boolean, boolean):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(double, double, double):::ENTER
expected == actual
expected == 3.875
delta == 1.0E-5
===========================================================================
junit.framework.Assert.assertEquals(double, double, double):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(float, float, float):::ENTER
expected == actual
expected == 3.875
delta == 1.0E-5
===========================================================================
junit.framework.Assert.assertEquals(float, float, float):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(int, int):::ENTER
expected == actual
===========================================================================
junit.framework.Assert.assertEquals(int, int):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object):::ENTER
expected.getClass().getName() == org.apache.commons.lang3.math.Fraction.class
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean):::ENTER
expected == actual
message == null
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, double, double, double):::ENTER
expected == actual
message == null
expected == 3.875
delta == 1.0E-5
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, double, double, double):::EXIT96
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, double, double, double):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, float, float, float):::ENTER
expected == actual
message == null
expected == 3.875
delta == 1.0E-5
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, float, float, float):::EXIT114
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, float, float, float):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, int, int):::ENTER
expected == actual
message == null
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, int, int):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
message == null
expected != null
actual != null
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT63
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String):::ENTER
expected != null
actual != null
expected.toString == actual.toString
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String):::EXIT
expected.toString == actual.toString
expected.toString == orig(expected.toString)
expected.toString == orig(actual.toString)
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::ENTER
message == null
expected != null
actual != null
expected.toString == actual.toString
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::EXIT80
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::EXIT
expected.toString == actual.toString
expected.toString == orig(expected.toString)
expected.toString == orig(actual.toString)
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, long, long):::ENTER
expected == actual
message == null
expected == 3
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, long, long):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(long, long):::ENTER
expected == actual
expected == 3
===========================================================================
junit.framework.Assert.assertEquals(long, long):::EXIT
===========================================================================
junit.framework.Assert.assertFalse(boolean):::ENTER
condition == false
===========================================================================
junit.framework.Assert.assertFalse(boolean):::EXIT
===========================================================================
junit.framework.Assert.assertFalse(java.lang.String, boolean):::ENTER
message == null
condition == false
===========================================================================
junit.framework.Assert.assertFalse(java.lang.String, boolean):::EXIT
===========================================================================
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object):::ENTER
message has only one value
message != null
message.toString == "TestCase.fName cannot be null"
object != null
object.getClass().getName() == java.lang.String.class
===========================================================================
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object):::EXIT
message.toString == "TestCase.fName cannot be null"
message.toString == orig(message.toString)
===========================================================================
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object):::ENTER
expected == actual
expected != null
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
expected == actual
message == null
expected != null
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT235
===========================================================================
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertTrue(boolean):::ENTER
condition == true
===========================================================================
junit.framework.Assert.assertTrue(boolean):::EXIT
===========================================================================
junit.framework.Assert.assertTrue(java.lang.String, boolean):::ENTER
message.toString == "TestCase.fName cannot be null"
condition == true
===========================================================================
junit.framework.Assert.assertTrue(java.lang.String, boolean):::EXIT
message.toString == "TestCase.fName cannot be null"
message.toString == orig(message.toString)
===========================================================================
junit.framework.TestCase:::OBJECT
this.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
this.fName != null
===========================================================================
junit.framework.TestCase.TestCase(java.lang.String):::ENTER
name != null
===========================================================================
junit.framework.TestCase.TestCase(java.lang.String):::EXIT
this.fName == orig(name)
this.fName.toString == name.toString
name.toString == orig(name.toString)
===========================================================================
junit.framework.TestCase.countTestCases():::ENTER
===========================================================================
junit.framework.TestCase.countTestCases():::EXIT
this.fName == orig(this.fName)
return == 1
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.run(junit.framework.TestResult):::ENTER
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
result has only one value
result != null
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
this.getClass().getName() != result.fFailures.getClass().getName()
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fRunTests >= size(result.fFailures[])
===========================================================================
junit.framework.TestCase.run(junit.framework.TestResult):::EXIT
this.fName == orig(this.fName)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
this.fName.toString == orig(this.fName.toString)
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fFailures.getClass().getName() != orig(this.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fFailures.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fErrors.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fListeners.getClass().getName())
result.fRunTests - orig(result.fRunTests) - 1 == 0
result.fRunTests >= size(result.fListeners[])
orig(result.fRunTests) >= size(result.fFailures[])
===========================================================================
junit.framework.TestCase.runBare():::ENTER
===========================================================================
junit.framework.TestCase.runBare():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.runTest():::ENTER
===========================================================================
junit.framework.TestCase.runTest():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.setUp():::ENTER
===========================================================================
junit.framework.TestCase.setUp():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.tearDown():::ENTER
===========================================================================
junit.framework.TestCase.tearDown():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestResult$1:::OBJECT
junit.framework.TestResult.this.fFailures[] == junit.framework.TestResult.this.fErrors[]
size(junit.framework.TestResult.this.fFailures[]) == size(junit.framework.TestResult.this.fListeners[])-1
this.val$test.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
junit.framework.TestResult.this has only one value
junit.framework.TestResult.this.fFailures has only one value
junit.framework.TestResult.this.fFailures[] == []
junit.framework.TestResult.this.fFailures[].getClass().getName() == []
junit.framework.TestResult.this.fFailures.getClass().getName() == java.util.ArrayList.class
junit.framework.TestResult.this.fErrors has only one value
junit.framework.TestResult.this.fListeners has only one value
junit.framework.TestResult.this.fListeners[] contains no nulls and has only one value, of length 1
junit.framework.TestResult.this.fListeners[] elements has only one value
junit.framework.TestResult.this.fListeners[] elements != null
junit.framework.TestResult.this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
junit.framework.TestResult.this.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
junit.framework.TestResult.this.fRunTests >= 1
junit.framework.TestResult.this.fStop == false
size(junit.framework.TestResult.this.fListeners[]) == 1
this.val$test.getClass().getName() != junit.framework.TestResult.this.fFailures.getClass().getName()
junit.framework.TestResult.this.fFailures.getClass().getName() == junit.framework.TestResult.this.fErrors.getClass().getName()
junit.framework.TestResult.this.fFailures.getClass().getName() == junit.framework.TestResult.this.fListeners.getClass().getName()
size(junit.framework.TestResult.this.fFailures[]) % junit.framework.TestResult.this.fRunTests == 0
junit.framework.TestResult.this.fRunTests >= size(junit.framework.TestResult.this.fListeners[])
===========================================================================
junit.framework.TestResult$1.(junit.framework.TestResult, junit.framework.TestCase):::ENTER
junit.framework.TestResult.this.fFailures[] == junit.framework.TestResult.this.fErrors[]
size(junit.framework.TestResult.this.fFailures[]) == size(junit.framework.TestResult.this.fListeners[])-1
junit.framework.TestResult.this has only one value
junit.framework.TestResult.this != null
junit.framework.TestResult.this.fFailures has only one value
junit.framework.TestResult.this.fFailures != null
junit.framework.TestResult.this.fFailures[] == []
junit.framework.TestResult.this.fFailures[].getClass().getName() == []
junit.framework.TestResult.this.fFailures.getClass().getName() == java.util.ArrayList.class
junit.framework.TestResult.this.fErrors has only one value
junit.framework.TestResult.this.fErrors != null
junit.framework.TestResult.this.fListeners has only one value
junit.framework.TestResult.this.fListeners != null
junit.framework.TestResult.this.fListeners[] contains no nulls and has only one value, of length 1
junit.framework.TestResult.this.fListeners[] elements has only one value
junit.framework.TestResult.this.fListeners[] elements != null
junit.framework.TestResult.this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
junit.framework.TestResult.this.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
junit.framework.TestResult.this.fStop == false
$hidden$2 != null
$hidden$2.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
$hidden$2.fName != null
size(junit.framework.TestResult.this.fListeners[]) == 1
junit.framework.TestResult.this.fFailures.getClass().getName() == junit.framework.TestResult.this.fErrors.getClass().getName()
junit.framework.TestResult.this.fFailures.getClass().getName() == junit.framework.TestResult.this.fListeners.getClass().getName()
junit.framework.TestResult.this.fFailures.getClass().getName() != $hidden$2.getClass().getName()
junit.framework.TestResult.this.fRunTests >= size(junit.framework.TestResult.this.fListeners[])
===========================================================================
junit.framework.TestResult$1.(junit.framework.TestResult, junit.framework.TestCase):::EXIT
this.val$test == orig($hidden$2)
this.val$test.fName == orig($hidden$2.fName)
junit.framework.TestResult.this == orig(junit.framework.TestResult.this)
junit.framework.TestResult.this.fFailures == orig(junit.framework.TestResult.this.fFailures)
junit.framework.TestResult.this.fFailures[] == orig(junit.framework.TestResult.this.fFailures[])
junit.framework.TestResult.this.fErrors == orig(junit.framework.TestResult.this.fErrors)
junit.framework.TestResult.this.fListeners == orig(junit.framework.TestResult.this.fListeners)
junit.framework.TestResult.this.fRunTests == orig(junit.framework.TestResult.this.fRunTests)
junit.framework.TestResult.this.fStop == orig(junit.framework.TestResult.this.fStop)
size(junit.framework.TestResult.this.fFailures[]) == orig(size(junit.framework.TestResult.this.fListeners[]))-1
this.val$test != null
this.val$test.fName != null
this.val$test.getClass().getName() == orig($hidden$2.getClass().getName())
this.val$test.fName.toString == orig($hidden$2.fName.toString)
junit.framework.TestResult.this.fFailures[] is the reverse of orig(junit.framework.TestResult.this.fFailures[])
junit.framework.TestResult.this.fFailures.getClass().getName() == orig(junit.framework.TestResult.this.fFailures.getClass().getName())
junit.framework.TestResult.this.fFailures.getClass().getName() == orig(junit.framework.TestResult.this.fErrors.getClass().getName())
junit.framework.TestResult.this.fFailures.getClass().getName() == orig(junit.framework.TestResult.this.fListeners.getClass().getName())
junit.framework.TestResult.this.fListeners[] == orig(junit.framework.TestResult.this.fListeners[]) (elementwise)
junit.framework.TestResult.this.fListeners[] is the reverse of orig(junit.framework.TestResult.this.fListeners[])
orig(junit.framework.TestResult.this.fRunTests) >= size(junit.framework.TestResult.this.fListeners[])
===========================================================================
junit.framework.TestResult$1.protect():::ENTER
===========================================================================
junit.framework.TestResult$1.protect():::EXIT
this.val$test == orig(this.val$test)
this.val$test.fName == orig(this.val$test.fName)
junit.framework.TestResult.this == orig(junit.framework.TestResult.this)
junit.framework.TestResult.this.fFailures == orig(junit.framework.TestResult.this.fFailures)
junit.framework.TestResult.this.fFailures[] == orig(junit.framework.TestResult.this.fFailures[])
junit.framework.TestResult.this.fFailures[] == orig(junit.framework.TestResult.this.fErrors[])
junit.framework.TestResult.this.fErrors == orig(junit.framework.TestResult.this.fErrors)
junit.framework.TestResult.this.fListeners == orig(junit.framework.TestResult.this.fListeners)
junit.framework.TestResult.this.fListeners[] == orig(junit.framework.TestResult.this.fListeners[])
junit.framework.TestResult.this.fRunTests == orig(junit.framework.TestResult.this.fRunTests)
junit.framework.TestResult.this.fStop == orig(junit.framework.TestResult.this.fStop)
size(junit.framework.TestResult.this.fFailures[]) == orig(size(junit.framework.TestResult.this.fListeners[]))-1
this.val$test.getClass().getName() == orig(this.val$test.getClass().getName())
this.val$test.fName.toString == orig(this.val$test.fName.toString)
junit.framework.TestResult.this.fFailures.getClass().getName() == orig(junit.framework.TestResult.this.fFailures.getClass().getName())
junit.framework.TestResult.this.fFailures.getClass().getName() == orig(junit.framework.TestResult.this.fErrors.getClass().getName())
junit.framework.TestResult.this.fFailures.getClass().getName() == orig(junit.framework.TestResult.this.fListeners.getClass().getName())
===========================================================================
junit.framework.TestResult:::OBJECT
this.fFailures[] == this.fErrors[]
this has only one value
this.fFailures has only one value
this.fFailures != null
this.fFailures[] == []
this.fFailures[].getClass().getName() == []
this.fFailures.getClass().getName() == java.util.ArrayList.class
this.fErrors has only one value
this.fErrors != null
this.fListeners has only one value
this.fListeners != null
this.fListeners[] elements has only one value
this.fListeners[] elements != null
this.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
this.fListeners[].getClass().getName() one of { [], [junit.textui.ResultPrinter] }
this.fRunTests >= 0
this.fStop == false
size(this.fListeners[]) one of { 0, 1 }
this.fFailures.getClass().getName() == this.fErrors.getClass().getName()
this.fFailures.getClass().getName() == this.fListeners.getClass().getName()
this.fRunTests >= size(this.fFailures[])
this.fRunTests >= size(this.fListeners[])-1
size(this.fFailures[]) <= size(this.fListeners[])
size(this.fFailures[]) >= size(this.fListeners[])-1
size(this.fFailures[])-1 <= size(this.fListeners[])-1
===========================================================================
junit.framework.TestResult.TestResult():::EXIT
this.fFailures[] == this.fListeners[]
this.fRunTests == size(this.fFailures[])
this.fRunTests == size(this.fErrors[])
this.fRunTests == size(this.fListeners[])
===========================================================================
junit.framework.TestResult.addListener(junit.framework.TestListener):::ENTER
this.fFailures[] == this.fListeners[]
this.fRunTests == size(this.fFailures[])
this.fRunTests == size(this.fErrors[])
this.fRunTests == size(this.fListeners[])
listener has only one value
listener.getClass().getName() == junit.textui.ResultPrinter.class
===========================================================================
junit.framework.TestResult.addListener(junit.framework.TestListener):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fFailures[] == orig(this.fListeners[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fRunTests == orig(this.fRunTests)
this.fRunTests == size(this.fFailures[])
this.fRunTests == size(this.fErrors[])
this.fRunTests == size(this.fListeners[])-1
this.fRunTests == orig(size(this.fFailures[]))
this.fRunTests == orig(size(this.fErrors[]))
this.fRunTests == orig(size(this.fListeners[]))
this.fStop == orig(this.fStop)
orig(listener) == this.fListeners[this.fRunTests]
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
orig(listener) in this.fListeners[]
this.fListeners[] elements == orig(listener)
this.fListeners[] elements == this.fListeners[this.fRunTests]
orig(listener.getClass().getName()) in this.fListeners[].getClass().getName()
===========================================================================
junit.framework.TestResult.cloneListeners():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.cloneListeners():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == return[]
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
return[] == orig(this.fListeners[])
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == size(return[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
return != null
return[] contains no nulls and has only one value, of length 1
return[] elements has only one value
return[] elements != null
return[].getClass().getName() == [junit.textui.ResultPrinter]
return[].getClass().getName() elements == junit.textui.ResultPrinter.class
return.getClass().getName() == java.util.ArrayList.class
size(return[]) == 1
this.fFailures.getClass().getName() == return.getClass().getName()
this.fErrors.getClass().getName() == return.getClass().getName()
this.fListeners.getClass().getName() == return.getClass().getName()
this.fRunTests >= size(return[])
return.getClass().getName() == orig(this.fFailures.getClass().getName())
return.getClass().getName() == orig(this.fErrors.getClass().getName())
return.getClass().getName() == orig(this.fListeners.getClass().getName())
===========================================================================
junit.framework.TestResult.endTest(junit.framework.Test):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() != test.getClass().getName()
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.endTest(junit.framework.Test):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
this.fFailures.getClass().getName() != orig(test.getClass().getName())
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.errorCount():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.errorCount():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
return == size(this.fFailures[])
return == size(this.fErrors[])
return == size(this.fListeners[])-1
return == orig(size(this.fFailures[]))
return == orig(size(this.fErrors[]))
return == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
this.fListeners[] elements == this.fListeners[return]
===========================================================================
junit.framework.TestResult.errors():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.errors():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
return has only one value
return.getClass().getName() == java.util.Collections$3.class
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
===========================================================================
junit.framework.TestResult.failureCount():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.failureCount():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
return == size(this.fFailures[])
return == size(this.fErrors[])
return == size(this.fListeners[])-1
return == orig(size(this.fFailures[]))
return == orig(size(this.fErrors[]))
return == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
this.fListeners[] elements == this.fListeners[return]
===========================================================================
junit.framework.TestResult.failures():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.failures():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
return has only one value
return.getClass().getName() == java.util.Collections$3.class
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
===========================================================================
junit.framework.TestResult.run(junit.framework.TestCase):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
test.fName != null
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() != test.getClass().getName()
===========================================================================
junit.framework.TestResult.run(junit.framework.TestCase):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fStop == orig(this.fStop)
test.fName == orig(test.fName)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test.fName != null
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
this.fFailures.getClass().getName() != orig(test.getClass().getName())
this.fRunTests - orig(this.fRunTests) - 1 == 0
this.fRunTests >= size(this.fListeners[])
test.fName.toString == orig(test.fName.toString)
orig(this.fRunTests) >= size(this.fFailures[])
===========================================================================
junit.framework.TestResult.runCount():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.runCount():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == return
this.fStop == orig(this.fStop)
return == orig(this.fRunTests)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return == 25
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
===========================================================================
junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
p != null
p.getClass().getName() == junit.framework.TestResult$1.class
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() != test.getClass().getName()
this.fFailures.getClass().getName() != p.getClass().getName()
this.fRunTests >= size(this.fListeners[])
test.getClass().getName() != p.getClass().getName()
===========================================================================
junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
this.fFailures.getClass().getName() != orig(test.getClass().getName())
this.fFailures.getClass().getName() != orig(p.getClass().getName())
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.shouldStop():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.shouldStop():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == return
return == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return == false
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
===========================================================================
junit.framework.TestResult.shouldStop():::EXIT;condition="not(return == true)"
===========================================================================
junit.framework.TestResult.startTest(junit.framework.Test):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() != test.getClass().getName()
===========================================================================
junit.framework.TestResult.startTest(junit.framework.Test):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
this.fFailures.getClass().getName() != orig(test.getClass().getName())
this.fRunTests - orig(this.fRunTests) - 1 == 0
this.fRunTests >= size(this.fListeners[])
orig(this.fRunTests) >= size(this.fFailures[])
===========================================================================
junit.framework.TestResult.wasSuccessful():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.wasSuccessful():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 25
return == true
size(this.fListeners[]) == 1
this.fFailures.getClass().getName() == orig(this.fFailures.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fErrors.getClass().getName())
this.fFailures.getClass().getName() == orig(this.fListeners.getClass().getName())
===========================================================================
junit.framework.TestResult.wasSuccessful():::EXIT;condition="return == true"
===========================================================================
junit.framework.TestSuite:::OBJECT
this.fName.toString == "org.apache.commons.lang3.math.FractionTest"
this.fTests != null
this.fTests[] elements != null
===========================================================================
junit.framework.TestSuite.TestSuite():::EXIT
this.fName == null
this.fTests has only one value
this.fTests[] == []
this.fTests[].getClass().getName() == []
===========================================================================
junit.framework.TestSuite.TestSuite(java.lang.Class):::ENTER
theClass has only one value
===========================================================================
junit.framework.TestSuite.TestSuite(java.lang.Class):::EXIT151
===========================================================================
junit.framework.TestSuite.TestSuite(java.lang.Class):::EXIT
this.fName has only one value
this.fTests has only one value
this.fTests[] contains no nulls and has only one value, of length 25
this.fTests[].getClass().getName() == [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest]
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
size(this.fTests[]) == 25
===========================================================================
junit.framework.TestSuite.addTest(junit.framework.Test):::ENTER
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
test != null
===========================================================================
junit.framework.TestSuite.addTest(junit.framework.Test):::EXIT
this.fName == orig(this.fName)
this.fTests == orig(this.fTests)
size(this.fTests[])-1 == orig(size(this.fTests[]))
this.fName.toString == orig(this.fName.toString)
orig(test) in this.fTests[]
orig(test.getClass().getName()) in this.fTests[].getClass().getName()
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class):::ENTER
size(this.fTests[]) == size(names[])
this has only one value
this.fName has only one value
this.fName != null
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
m != null
names has only one value
names != null
names[] elements != null
names[].getClass().getName() elements == java.lang.String.class
names.getClass().getName() == java.util.ArrayList.class
theClass has only one value
theClass != null
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class):::EXIT280
this.fTests[] == orig(this.fTests[])
names[] == orig(names[])
size(this.fTests[]) == orig(size(names[]))
this.fTests[] contains no nulls and has only one value, of length 25
this.fTests[].getClass().getName() == [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest]
names[] contains no nulls and has only one value, of length 25
names[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
size(this.fTests[]) == 25
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class):::EXIT284
size(names[])-1 == orig(size(this.fTests[]))
size(names[])-1 == orig(size(names[]))
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class):::EXIT
this.fName == orig(this.fName)
this.fTests == orig(this.fTests)
this.fName has only one value
this.fName != null
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
names[] elements != null
names[].getClass().getName() elements == java.lang.String.class
this.fName.toString == orig(this.fName.toString)
size(this.fTests[]) >= orig(size(names[]))
size(names[])-1 <= orig(size(names[]))
size(names[])-1 >= orig(size(names[]))-1
===========================================================================
junit.framework.TestSuite.addTestSuite(java.lang.Class):::ENTER
this has only one value
this.fName == null
this.fTests has only one value
this.fTests[] == []
this.fTests[].getClass().getName() == []
testClass has only one value
===========================================================================
junit.framework.TestSuite.addTestSuite(java.lang.Class):::EXIT
this.fName == orig(this.fName)
this.fTests == orig(this.fTests)
size(this.fTests[])-1 == orig(size(this.fTests[]))
this.fName == null
this.fTests has only one value
this.fTests[] contains no nulls and has only one value, of length 1
this.fTests[] elements has only one value
this.fTests[].getClass().getName() == [junit.framework.TestSuite]
this.fTests[].getClass().getName() elements == junit.framework.TestSuite.class
size(this.fTests[]) == 1
===========================================================================
junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String):::ENTER
theClass has only one value
theClass != null
name != null
===========================================================================
junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String):::EXIT74
===========================================================================
junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String):::EXIT
return != null
return.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
name.toString == orig(name.toString)
===========================================================================
junit.framework.TestSuite.getTestConstructor(java.lang.Class):::ENTER
theClass has only one value
theClass != null
===========================================================================
junit.framework.TestSuite.getTestConstructor(java.lang.Class):::EXIT83
===========================================================================
junit.framework.TestSuite.getTestConstructor(java.lang.Class):::EXIT
return != null
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::ENTER
this has only one value
this.fName has only one value
this.fName != null
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
m != null
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT
this.fName == orig(this.fName)
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
(return == false)  <==>  (size(this.fTests[]) == 25)
(return == false)  ==>  (this.fTests[] contains no nulls and has only one value, of length 25)
(return == false)  ==>  (this.fTests[].getClass().getName() == [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest])
this.fName has only one value
this.fName != null
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT;condition="return == true"
return == true
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT;condition="not(return == true)"
this.fTests[] contains no nulls and has only one value, of length 25
this.fTests[].getClass().getName() == [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest]
return == false
size(this.fTests[]) == 25
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::ENTER
this has only one value
this.fName has only one value
this.fName != null
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
m != null
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT
this.fName == orig(this.fName)
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
(return == false)  <==>  (size(this.fTests[]) == 25)
(return == false)  ==>  (this.fTests[] contains no nulls and has only one value, of length 25)
(return == false)  ==>  (this.fTests[].getClass().getName() == [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest])
this.fName has only one value
this.fName != null
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.lang3.math.FractionTest.class
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT;condition="return == true"
return == true
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT;condition="not(return == true)"
this.fTests[] contains no nulls and has only one value, of length 25
this.fTests[].getClass().getName() == [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest]
return == false
size(this.fTests[]) == 25
===========================================================================
junit.framework.TestSuite.run(junit.framework.TestResult):::ENTER
result.fFailures[] == result.fErrors[]
result.fRunTests == size(result.fFailures[])
result.fRunTests == size(result.fErrors[])
result.fRunTests == size(result.fListeners[])-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest] }
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(this.fTests[]) one of { 1, 25 }
size(result.fListeners[]) == 1
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fListeners[] elements == result.fListeners[result.fRunTests]
===========================================================================
junit.framework.TestSuite.run(junit.framework.TestResult):::EXIT
this.fName == orig(this.fName)
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
orig(result.fRunTests) == size(result.fFailures[])
orig(result.fRunTests) == size(result.fErrors[])
orig(result.fRunTests) == size(result.fListeners[])-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest] }
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fRunTests == 25
result.fStop == false
size(this.fTests[]) one of { 1, 25 }
size(result.fListeners[]) == 1
this.fName.toString == orig(this.fName.toString)
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fFailures.getClass().getName() == orig(result.fFailures.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fErrors.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fListeners.getClass().getName())
result.fListeners[] elements == result.fListeners[orig(result.fRunTests)]
===========================================================================
junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult):::ENTER
test == this.fTests[result.fRunTests]
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest] }
test != null
result has only one value
result != null
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(this.fTests[]) one of { 1, 25 }
size(result.fListeners[]) == 1
test in this.fTests[]
test.getClass().getName() in this.fTests[].getClass().getName()
test.getClass().getName() != result.fFailures.getClass().getName()
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fRunTests <= size(this.fTests[])-1
result.fRunTests >= size(result.fFailures[])
size(this.fTests[]) >= size(result.fListeners[])
size(this.fTests[])-1 >= size(result.fFailures[])
size(this.fTests[])-1 != size(result.fListeners[])
===========================================================================
junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult):::EXIT
this.fName == orig(this.fName)
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
orig(test) == this.fTests[orig(result.fRunTests)]
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest, org.apache.commons.lang3.math.FractionTest] }
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(this.fTests[]) one of { 1, 25 }
size(result.fListeners[]) == 1
this.fName.toString == orig(this.fName.toString)
orig(test) in this.fTests[]
orig(test.getClass().getName()) in this.fTests[].getClass().getName()
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fFailures.getClass().getName() != orig(test.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fFailures.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fErrors.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fListeners.getClass().getName())
result.fRunTests > orig(result.fRunTests)
result.fRunTests >= size(result.fListeners[])
orig(result.fRunTests) <= size(this.fTests[])-1
orig(result.fRunTests) >= size(result.fFailures[])
size(this.fTests[]) >= size(result.fListeners[])
size(this.fTests[])-1 >= size(result.fFailures[])
size(this.fTests[])-1 != size(result.fListeners[])
result.fRunTests - orig(result.fRunTests) + size(this.fTests[]) - 26 == 0
result.fRunTests - orig(result.fRunTests) + size(this.fTests[])-1 - 25 == 0
===========================================================================
junit.runner.BaseTestRunner:::CLASS
junit.runner.BaseTestRunner.SUITE_METHODNAME has only one value
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == "suite"
junit.runner.BaseTestRunner.fPreferences has only one value
junit.runner.BaseTestRunner.fgMaxMessageLength == 500
junit.runner.BaseTestRunner.fgFilterStack == true
===========================================================================
junit.runner.BaseTestRunner:::OBJECT
junit.runner.BaseTestRunner.fgFilterStack == this.fLoading
this has only one value
this.getClass().getName() == junit.textui.TestRunner.class
===========================================================================
junit.runner.BaseTestRunner.BaseTestRunner():::EXIT
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String):::ENTER
key has only one value
key.toString == "maxmessage"
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String):::EXIT
key.toString == "maxmessage"
return == null
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String, int):::ENTER
key has only one value
key.toString == "maxmessage"
dflt == 500
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String, int):::EXIT248
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String, int):::EXIT
key.toString == "maxmessage"
return == 500
===========================================================================
junit.runner.BaseTestRunner.getPreferences():::EXIT
return has only one value
===========================================================================
junit.runner.BaseTestRunner.getPreferencesFile():::EXIT
return has only one value
===========================================================================
junit.textui.ResultPrinter:::OBJECT
this has only one value
this.fWriter has only one value
this.fWriter != null
this.fColumn >= 0
===========================================================================
junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream):::ENTER
writer has only one value
===========================================================================
junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream):::EXIT
this.fWriter == orig(writer)
this.fColumn == 0
===========================================================================
junit.textui.ResultPrinter.elapsedTimeAsString(long):::ENTER
this.fColumn == 25
runTime == 722123
===========================================================================
junit.textui.ResultPrinter.elapsedTimeAsString(long):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
this.fColumn == 25
return has only one value
return.toString == "722.123"
===========================================================================
junit.textui.ResultPrinter.endTest(junit.framework.Test):::ENTER
test != null
test.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
===========================================================================
junit.textui.ResultPrinter.endTest(junit.framework.Test):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
===========================================================================
junit.textui.ResultPrinter.getWriter():::ENTER
===========================================================================
junit.textui.ResultPrinter.getWriter():::EXIT
this.fWriter == return
this.fColumn == orig(this.fColumn)
return == orig(this.fWriter)
return has only one value
return != null
===========================================================================
junit.textui.ResultPrinter.print(junit.framework.TestResult, long):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 25
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
runTime == 722123
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
===========================================================================
junit.textui.ResultPrinter.print(junit.framework.TestResult, long):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 25
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fFailures.getClass().getName() == orig(result.fFailures.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fErrors.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fListeners.getClass().getName())
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String):::ENTER
this.fColumn == 25
booBoos.getClass().getName() == java.util.Collections$3.class
count == 0
type.toString one of { "error", "failure" }
===========================================================================
junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String):::EXIT55
===========================================================================
junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
this.fColumn == 25
type.toString one of { "error", "failure" }
type.toString == orig(type.toString)
===========================================================================
junit.textui.ResultPrinter.printErrors(junit.framework.TestResult):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 25
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
===========================================================================
junit.textui.ResultPrinter.printErrors(junit.framework.TestResult):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 25
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fFailures.getClass().getName() == orig(result.fFailures.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fErrors.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fListeners.getClass().getName())
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printFailures(junit.framework.TestResult):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 25
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
===========================================================================
junit.textui.ResultPrinter.printFailures(junit.framework.TestResult):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 25
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fFailures.getClass().getName() == orig(result.fFailures.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fErrors.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fListeners.getClass().getName())
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printFooter(junit.framework.TestResult):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 25
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
===========================================================================
junit.textui.ResultPrinter.printFooter(junit.framework.TestResult):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 25
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fFailures.getClass().getName() == java.util.ArrayList.class
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fFailures.getClass().getName() == result.fErrors.getClass().getName()
result.fFailures.getClass().getName() == result.fListeners.getClass().getName()
result.fFailures.getClass().getName() == orig(result.fFailures.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fErrors.getClass().getName())
result.fFailures.getClass().getName() == orig(result.fListeners.getClass().getName())
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printHeader(long):::ENTER
this.fColumn == 25
runTime == 722123
===========================================================================
junit.textui.ResultPrinter.printHeader(long):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
this.fColumn == 25
===========================================================================
junit.textui.ResultPrinter.startTest(junit.framework.Test):::ENTER
test != null
test.getClass().getName() == org.apache.commons.lang3.math.FractionTest.class
===========================================================================
junit.textui.ResultPrinter.startTest(junit.framework.Test):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn - orig(this.fColumn) - 1 == 0
===========================================================================
junit.textui.TestRunner:::CLASS
junit.runner.BaseTestRunner.SUITE_METHODNAME has only one value
junit.runner.BaseTestRunner.SUITE_METHODNAME != null
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == "suite"
junit.runner.BaseTestRunner.fPreferences has only one value
junit.runner.BaseTestRunner.fPreferences != null
junit.runner.BaseTestRunner.fgMaxMessageLength == 500
junit.runner.BaseTestRunner.fgFilterStack == true
===========================================================================
junit.textui.TestRunner:::OBJECT
junit.runner.BaseTestRunner.fgFilterStack == this.fLoading
this has only one value
this.fPrinter has only one value
this.fPrinter.fWriter has only one value
this.fPrinter.fColumn one of { 0, 25 }
this.fPrinter.fColumn >= junit.textui.TestRunner.SUCCESS_EXIT
this.fPrinter.fColumn != junit.textui.TestRunner.FAILURE_EXIT
this.fPrinter.fColumn != junit.textui.TestRunner.EXCEPTION_EXIT
this.fPrinter.fColumn < junit.runner.BaseTestRunner.fgMaxMessageLength
===========================================================================
junit.textui.TestRunner.TestRunner():::EXIT
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
===========================================================================
junit.textui.TestRunner.TestRunner(java.io.PrintStream):::ENTER
writer has only one value
===========================================================================
junit.textui.TestRunner.TestRunner(java.io.PrintStream):::EXIT
this.fPrinter.fWriter == orig(writer)
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
===========================================================================
junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter):::ENTER
printer has only one value
printer.fWriter has only one value
printer.fColumn == 0
===========================================================================
junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter):::EXIT
this.fPrinter == orig(printer)
this.fPrinter.fWriter == printer.fWriter
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
junit.textui.TestRunner.SUCCESS_EXIT == printer.fColumn
junit.textui.TestRunner.SUCCESS_EXIT == orig(printer.fColumn)
printer.fWriter == orig(printer.fWriter)
printer.fWriter has only one value
===========================================================================
junit.textui.TestRunner.createTestResult():::ENTER
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
===========================================================================
junit.textui.TestRunner.createTestResult():::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
junit.textui.TestRunner.SUCCESS_EXIT == return.fRunTests
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
return.fFailures[] == return.fErrors[]
return.fFailures[] == return.fListeners[]
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fFailures.getClass().getName() == java.util.ArrayList.class
return.fErrors has only one value
return.fListeners has only one value
return.fStop == false
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
return.fFailures.getClass().getName() == return.fErrors.getClass().getName()
return.fFailures.getClass().getName() == return.fListeners.getClass().getName()
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test):::ENTER
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
test has only one value
test.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test):::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == return.fRunTests
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])-1
junit.textui.TestRunner.FAILURE_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
return.fFailures[] == return.fErrors[]
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fFailures.getClass().getName() == java.util.ArrayList.class
return.fErrors has only one value
return.fListeners has only one value
return.fListeners[] contains no nulls and has only one value, of length 1
return.fListeners[] elements has only one value
return.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
return.fRunTests == 25
return.fStop == false
return.fListeners[] elements == this.fPrinter
this.fPrinter in return.fListeners[]
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
return.fFailures.getClass().getName() == return.fErrors.getClass().getName()
return.fFailures.getClass().getName() == return.fListeners.getClass().getName()
return.fListeners[] elements == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test, boolean):::ENTER
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
suite has only one value
suite.getClass().getName() == junit.framework.TestSuite.class
wait == false
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test, boolean):::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == return.fRunTests
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])-1
junit.textui.TestRunner.FAILURE_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
return.fFailures[] == return.fErrors[]
return.fStop == orig(wait)
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fFailures.getClass().getName() == java.util.ArrayList.class
return.fErrors has only one value
return.fListeners has only one value
return.fListeners[] contains no nulls and has only one value, of length 1
return.fListeners[] elements has only one value
return.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
return.fRunTests == 25
return.fStop == false
return.fListeners[] elements == this.fPrinter
this.fPrinter in return.fListeners[]
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
return.fFailures.getClass().getName() == return.fErrors.getClass().getName()
return.fFailures.getClass().getName() == return.fListeners.getClass().getName()
return.fListeners[] elements == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
===========================================================================
junit.textui.TestRunner.pause(boolean):::ENTER
this.fPrinter.fColumn == 25
wait == false
===========================================================================
junit.textui.TestRunner.pause(boolean):::EXIT126
===========================================================================
junit.textui.TestRunner.pause(boolean):::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == orig(this.fPrinter.fColumn)
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
this.fPrinter.fColumn == 25
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
===========================================================================
junit.textui.TestRunner.run(junit.framework.Test):::ENTER
test has only one value
test.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
junit.textui.TestRunner.run(junit.framework.Test):::EXIT
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])-1
junit.textui.TestRunner.FAILURE_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
return.fFailures[] == return.fErrors[]
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fFailures.getClass().getName() == java.util.ArrayList.class
return.fErrors has only one value
return.fListeners has only one value
return.fListeners[] contains no nulls and has only one value, of length 1
return.fListeners[] elements has only one value
return.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
return.fRunTests == 25
return.fStop == false
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
return.fFailures.getClass().getName() == return.fErrors.getClass().getName()
return.fFailures.getClass().getName() == return.fListeners.getClass().getName()
return.fListeners[] elements == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
===========================================================================
org.apache.commons.lang3.daikon.FractionTest.main(java.lang.String[]):::ENTER
arg has only one value
arg.getClass().getName() == java.lang.String[].class
arg[] == []
arg[].toString == []
===========================================================================
org.apache.commons.lang3.daikon.FractionTest.main(java.lang.String[]):::EXIT
arg[] == orig(arg[])
arg[] == []
arg[].toString == []
===========================================================================
org.apache.commons.lang3.math.Fraction:::CLASS
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.ZERO.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.ONE.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.denominator == org.apache.commons.lang3.math.Fraction.ONE.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == org.apache.commons.lang3.math.Fraction.ONE.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ZERO.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_HALF.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator
org.apache.commons.lang3.math.Fraction.ZERO has only one value
org.apache.commons.lang3.math.Fraction.ONE has only one value
org.apache.commons.lang3.math.Fraction.ONE_HALF has only one value
org.apache.commons.lang3.math.Fraction.ONE_THIRD has only one value
org.apache.commons.lang3.math.Fraction.TWO_THIRDS has only one value
org.apache.commons.lang3.math.Fraction.ONE_QUARTER has only one value
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS has only one value
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS has only one value
org.apache.commons.lang3.math.Fraction.ONE_FIFTH has only one value
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS has only one value
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS has only one value
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS has only one value
org.apache.commons.lang3.math.Fraction.ZERO.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator == 1
org.apache.commons.lang3.math.Fraction.ZERO.toString == null
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == 2
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == 3
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == 4
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == 5
===========================================================================
org.apache.commons.lang3.math.Fraction:::OBJECT
this.denominator >= 1
this.hashCode >= 0
org.apache.commons.lang3.math.Fraction.serialVersionUID > this.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > this.denominator
org.apache.commons.lang3.math.Fraction.serialVersionUID > this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < this.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= this.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.hashCode
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.hashCode
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.hashCode
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.hashCode
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.hashCode
this.denominator != this.hashCode
===========================================================================
org.apache.commons.lang3.math.Fraction.Fraction(int, int):::ENTER
denominator >= 1
===========================================================================
org.apache.commons.lang3.math.Fraction.Fraction(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
this.numerator == orig(numerator)
this.denominator == orig(denominator)
this.toString == this.toProperString
this.hashCode == 0
this.toString == null
this.denominator > this.hashCode
this.hashCode % this.denominator == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.abs():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
this.denominator one of { 1, 75 }
===========================================================================
org.apache.commons.lang3.math.Fraction.abs():::EXIT529
this.numerator == return.numerator
return == orig(this)
this.numerator one of { 50, 2147483647 }
===========================================================================
org.apache.commons.lang3.math.Fraction.abs():::EXIT531
this.numerator one of { -2147483647, -50 }
===========================================================================
org.apache.commons.lang3.math.Fraction.abs():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == return.denominator
this.denominator == orig(this.denominator)
(this.numerator one of { 50, 2147483647 })  <==>  (this.numerator == return.numerator)
(this.numerator one of { 50, 2147483647 })  ==>  (return == orig(this))
this.denominator one of { 1, 75 }
return.numerator one of { 50, 2147483647 }
===========================================================================
org.apache.commons.lang3.math.Fraction.add(org.apache.commons.lang3.math.Fraction):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator >= fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator > fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > fraction.numerator
this.numerator != this.denominator
this.numerator != fraction.denominator
this.denominator >= fraction.numerator
this.denominator >= fraction.denominator
fraction.numerator <= fraction.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.add(org.apache.commons.lang3.math.Fraction):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(fraction.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.denominator == orig(fraction.denominator)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator >= fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator > fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
this.numerator != this.denominator
this.numerator != fraction.denominator
this.numerator != return.denominator
this.denominator >= fraction.numerator
this.denominator >= fraction.denominator
this.denominator != return.numerator
fraction.numerator <= fraction.denominator
fraction.denominator != return.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.addAndCheck(int, int):::ENTER
x one of { 6, 177147, 2147483646 }
y one of { 1, 5, 655360 }
===========================================================================
org.apache.commons.lang3.math.Fraction.addAndCheck(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
return one of { 11, 832507, 2147483647 }
===========================================================================
org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, boolean):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
fraction.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator >= fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > fraction.numerator
this.numerator != this.denominator
this.numerator != fraction.denominator
this.denominator >= fraction.numerator
this.denominator >= fraction.denominator
fraction.numerator <= fraction.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, boolean):::EXIT746
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(this.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(fraction.denominator)
fraction.numerator one of { -4, 1, 4 }
return.numerator one of { -4, 1, 4 }
===========================================================================
org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, boolean):::EXIT749
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(fraction.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(this.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(fraction.denominator)
return == orig(this)
===========================================================================
org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, boolean):::EXIT758
org.apache.commons.lang3.math.Fraction.ZERO.denominator == fraction.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(fraction.numerator)
this.numerator one of { 3, 2147483646, 2147483647 }
this.denominator one of { 1, 5 }
fraction.denominator one of { 1, 2 }
return.denominator one of { 1, 10 }
===========================================================================
org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, boolean):::EXIT781
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator < this.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator < this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator <= this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator >= fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator > fraction.numerator
this.numerator != return.numerator
this.denominator > fraction.numerator
fraction.numerator < fraction.denominator
fraction.numerator != return.numerator
fraction.numerator != return.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, boolean):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(fraction.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.denominator == orig(fraction.denominator)
fraction.denominator >= 1
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator >= fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
this.numerator != this.denominator
this.numerator != fraction.denominator
this.numerator != return.denominator
this.denominator >= fraction.numerator
this.denominator >= fraction.denominator
this.denominator != return.numerator
fraction.numerator <= fraction.denominator
fraction.denominator != return.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == other.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == other.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == other.toProperString
org.apache.commons.lang3.math.Fraction.serialVersionUID > other.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > other.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator < other.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator != other.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= other.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != other.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != other.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != other.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != other.numerator
this.numerator < this.denominator
this.numerator < other.denominator
this.denominator != other.numerator
other.numerator < other.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction):::EXIT884
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return
org.apache.commons.lang3.math.Fraction.ZERO.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode == return
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode == return
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode == return
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode == return
this.numerator == other.numerator
this.numerator == orig(other.numerator)
this.denominator == other.denominator
this.denominator == orig(other.denominator)
this.hashCode == return
other.hashCode == return
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
return == orig(this.hashCode)
return == orig(other.hashCode)
orig(this) == orig(other)
return == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction):::EXIT887
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return
org.apache.commons.lang3.math.Fraction.ZERO.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == other.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(other.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode == return
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == other.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(this.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(other.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode == return
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode == return
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode == return
this.hashCode == return
other.hashCode == return
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
return == orig(this.hashCode)
return == orig(other.hashCode)
return == 0
orig(this) has only one value
orig(other) has only one value
===========================================================================
org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction):::EXIT894
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return
org.apache.commons.lang3.math.Fraction.ZERO.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode == return
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode == return
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode == return
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode == return
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode == return
this.hashCode == return
other.hashCode == return
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
return == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
return == orig(this.hashCode)
return == orig(other.hashCode)
this.numerator one of { 0, 3 }
this.denominator one of { 5, 1231 }
other.numerator one of { 0, 6 }
other.denominator one of { 1, 10 }
return == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction):::EXIT896
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == other.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(other.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == other.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(this.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(other.denominator)
return == -1
orig(this) has only one value
orig(other) has only one value
===========================================================================
org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction):::EXIT898
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return
org.apache.commons.lang3.math.Fraction.ONE.numerator == return
org.apache.commons.lang3.math.Fraction.ONE.denominator == return
org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(this.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
other.numerator one of { -2147483648, 2 }
other.denominator one of { 5, 2147483647 }
return == 1
orig(this) has only one value
===========================================================================
org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == other.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(other.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == other.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == other.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(other.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(other.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
other.numerator == orig(other.numerator)
other.denominator == orig(other.denominator)
return one of { -1, 0, 1 }
org.apache.commons.lang3.math.Fraction.serialVersionUID > other.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > other.denominator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
org.apache.commons.lang3.math.Fraction.ZERO.numerator < other.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator != other.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= other.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator >= return
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != other.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator > return
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != other.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator > return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != other.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator > return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != other.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > return
this.numerator < this.denominator
this.numerator < other.denominator
this.denominator != other.numerator
this.denominator > return
other.numerator < other.denominator
other.denominator > return
===========================================================================
org.apache.commons.lang3.math.Fraction.divideBy(org.apache.commons.lang3.math.Fraction):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
this.denominator one of { 5, 7, 2147483647 }
fraction.numerator one of { 1, 2 }
===========================================================================
org.apache.commons.lang3.math.Fraction.divideBy(org.apache.commons.lang3.math.Fraction):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(fraction.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == return.numerator
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.denominator == orig(fraction.denominator)
this.denominator one of { 5, 7, 2147483647 }
fraction.numerator one of { 1, 2 }
return.denominator one of { 1, 2, 7 }
===========================================================================
org.apache.commons.lang3.math.Fraction.doubleValue():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
this has only one value
this.numerator == 31
this.denominator == 8
===========================================================================
org.apache.commons.lang3.math.Fraction.doubleValue():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
this.numerator == 31
this.denominator == 8
return == 3.875
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
this.numerator <= this.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT846
orig(this) == orig(obj)
this.numerator >= 1
this.denominator one of { 1, 5, 10 }
return == true
orig(obj.getClass().getName()) == org.apache.commons.lang3.math.Fraction.class
org.apache.commons.lang3.math.Fraction.ZERO.numerator < this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= this.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT846;condition="return == true"
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT849
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(this.denominator)
return == false
orig(this) has only one value
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT849;condition="not(return == true)"
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT852
this.numerator one of { 0, 1, 3 }
this.denominator one of { 1, 5 }
return == true
orig(obj.getClass().getName()) == org.apache.commons.lang3.math.Fraction.class
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT852;condition="return == true"
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT853
this.numerator one of { 0, 3, 6 }
this.denominator one of { 5, 10, 100 }
return == false
orig(obj.getClass().getName()) == org.apache.commons.lang3.math.Fraction.class
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT853;condition="not(return == true)"
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
(return == false)  ==>  (org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator <= this.denominator)
(return == false)  ==>  (org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator)
(return == false)  ==>  (org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator < this.denominator)
(return == false)  ==>  (org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator < this.denominator)
(return == false)  ==>  (org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator < this.denominator)
(return == false)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator)
(return == false)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.denominator < this.denominator)
(return == false)  ==>  (this.denominator one of { 5, 10, 100 })
(return == false)  ==>  (this.numerator < this.denominator)
(return == false)  ==>  (this.numerator one of { 0, 3, 6 })
(return == true)  ==>  (orig(obj.getClass().getName()) == org.apache.commons.lang3.math.Fraction.class)
(return == true)  ==>  (this.denominator one of { 1, 5, 10 })
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
this.numerator <= this.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT;condition="return == true"
this.denominator one of { 1, 5, 10 }
return == true
orig(obj.getClass().getName()) == org.apache.commons.lang3.math.Fraction.class
===========================================================================
org.apache.commons.lang3.math.Fraction.equals(java.lang.Object):::EXIT;condition="not(return == true)"
this.numerator one of { 0, 3, 6 }
this.denominator one of { 5, 10, 100 }
return == false
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator < this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator < this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator < this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator < this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator <= this.denominator
this.numerator < this.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.floatValue():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
this has only one value
this.numerator == 31
this.denominator == 8
===========================================================================
org.apache.commons.lang3.math.Fraction.floatValue():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
this.numerator == 31
this.denominator == 8
return == 3.875
===========================================================================
org.apache.commons.lang3.math.Fraction.getDenominator():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
===========================================================================
org.apache.commons.lang3.math.Fraction.getDenominator():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == return
return == orig(this.denominator)
return >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(double):::ENTER
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(double):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(int, int):::ENTER
org.apache.commons.lang3.math.Fraction.serialVersionUID > numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator != denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % denominator == 0
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator != orig(denominator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(denominator) == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != orig(numerator)
orig(denominator) % return.denominator == 0
return.denominator % orig(denominator) == 0
return.denominator >= orig(denominator)
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(int, int, int):::ENTER
numerator >= 0
denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > whole
org.apache.commons.lang3.math.Fraction.serialVersionUID > numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != whole
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != whole
numerator < denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(int, int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
return.denominator == orig(denominator)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= orig(numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != orig(numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != orig(whole)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != orig(numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != orig(whole)
return.numerator != return.denominator
return.denominator > orig(numerator)
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String):::ENTER
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String):::EXIT326
return.numerator one of { 0, 1, 2 }
str.toString == orig(str.toString)
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String):::EXIT340
return.numerator % org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String):::EXIT352
str.toString == orig(str.toString)
===========================================================================
org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator >= return.denominator
return.numerator != return.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.getNumerator():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
===========================================================================
org.apache.commons.lang3.math.Fraction.getNumerator():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == return
this.denominator == orig(this.denominator)
return == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
===========================================================================
org.apache.commons.lang3.math.Fraction.getProperNumerator():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
this.numerator != this.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.getProperNumerator():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
return >= 0
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= return
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator >= return
this.numerator != this.denominator
this.numerator != return
this.denominator > return
===========================================================================
org.apache.commons.lang3.math.Fraction.getProperWhole():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
this.numerator != this.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.getProperWhole():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != return
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator >= return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator > return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > return
this.numerator != this.denominator
this.denominator >= return
===========================================================================
org.apache.commons.lang3.math.Fraction.getReducedFraction(int, int):::ENTER
org.apache.commons.lang3.math.Fraction.serialVersionUID > numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator != denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % denominator == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.getReducedFraction(int, int):::EXIT214
org.apache.commons.lang3.math.Fraction.ZERO == return
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.denominator
orig(denominator) one of { 1, 2 }
===========================================================================
org.apache.commons.lang3.math.Fraction.getReducedFraction(int, int):::EXIT232
org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != orig(numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(numerator) == 0
orig(numerator) % return.numerator == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.getReducedFraction(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator != orig(numerator))
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator)  ==>  (denominator == return.denominator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(numerator) == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.numerator == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator)  ==>  (orig(numerator) % return.numerator == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(numerator))
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (denominator == orig(denominator))
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (denominator one of { 1, 2 })
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO == return)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.denominator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (orig(denominator) one of { 1, 2 })
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (orig(numerator) == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (return has only one value)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (return.denominator == 1)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)  ==>  (return.numerator == 0)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator != orig(denominator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(denominator) == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
orig(denominator) % return.denominator == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, int):::ENTER
v >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > u
org.apache.commons.lang3.math.Fraction.serialVersionUID > v
org.apache.commons.lang3.math.Fraction.ZERO.numerator != u
org.apache.commons.lang3.math.Fraction.ZERO.numerator % u == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator % v == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < v
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= v
===========================================================================
org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, int):::EXIT586
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return
org.apache.commons.lang3.math.Fraction.ONE.numerator == return
org.apache.commons.lang3.math.Fraction.ONE.denominator == return
org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator == return
return == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
return == 1
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != orig(u)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != orig(u)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != orig(u)
===========================================================================
org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, int):::EXIT624
orig(v) >= 2
org.apache.commons.lang3.math.Fraction.ZERO.denominator != orig(u)
org.apache.commons.lang3.math.Fraction.ZERO.denominator < orig(v)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator <= orig(v)
===========================================================================
org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
return >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return
org.apache.commons.lang3.math.Fraction.ZERO.numerator != orig(u)
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(u) == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(v) == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < orig(v)
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= orig(v)
orig(u) % return == 0
orig(v) % return == 0
return <= orig(v)
===========================================================================
org.apache.commons.lang3.math.Fraction.hashCode():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
this.numerator one of { 2, 3, 6 }
this.denominator one of { 5, 10 }
this.hashCode one of { 0, 23389 }
===========================================================================
org.apache.commons.lang3.math.Fraction.hashCode():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
this.hashCode == return
this.numerator one of { 2, 3, 6 }
this.denominator one of { 5, 10 }
return one of { 23352, 23389, 23505 }
orig(this.hashCode) % return == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.intValue():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
this has only one value
this.numerator == 31
this.denominator == 8
===========================================================================
org.apache.commons.lang3.math.Fraction.intValue():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == return
org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator == return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator == return
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
this.numerator == 31
this.denominator == 8
return == 3
===========================================================================
org.apache.commons.lang3.math.Fraction.invert():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.invert():::EXIT497
this.numerator one of { -2147483647, -15, -1 }
this.denominator one of { 1, 47, 2147483647 }
return.numerator one of { -2147483647, -47, -1 }
return.denominator one of { 1, 15, 2147483647 }
===========================================================================
org.apache.commons.lang3.math.Fraction.invert():::EXIT499
this.numerator == return.denominator
this.denominator == return.numerator
this.numerator >= 1
org.apache.commons.lang3.math.Fraction.ZERO.numerator < this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= this.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.invert():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
(this.numerator >= 1)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.numerator)
(this.numerator >= 1)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.denominator <= this.numerator)
(this.numerator >= 1)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.numerator)
(this.numerator >= 1)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator < this.numerator)
(this.numerator >= 1)  <==>  (return.numerator >= 1)
(this.numerator >= 1)  <==>  (this.denominator == return.numerator)
(this.numerator >= 1)  <==>  (this.numerator == return.denominator)
(this.numerator one of { -2147483647, -15, -1 })  <==>  (return.numerator one of { -2147483647, -47, -1 })
(this.numerator one of { -2147483647, -15, -1 })  ==>  (return.denominator one of { 1, 15, 2147483647 })
(this.numerator one of { -2147483647, -15, -1 })  ==>  (this.denominator one of { 1, 47, 2147483647 })
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.denominator
return.denominator % this.numerator == 0
this.numerator % return.denominator == 0
this.numerator <= return.denominator
return.numerator % this.denominator == 0
this.denominator % return.numerator == 0
this.denominator >= return.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.longValue():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
this has only one value
this.numerator == 31
this.denominator == 8
===========================================================================
org.apache.commons.lang3.math.Fraction.longValue():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == return
org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator == return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator == return
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator == return
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
return == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
this.numerator == 31
this.denominator == 8
return == 3
===========================================================================
org.apache.commons.lang3.math.Fraction.mulAndCheck(int, int):::ENTER
org.apache.commons.lang3.math.Fraction.serialVersionUID > x
org.apache.commons.lang3.math.Fraction.serialVersionUID > y
org.apache.commons.lang3.math.Fraction.ZERO.numerator != x
org.apache.commons.lang3.math.Fraction.ZERO.numerator % x == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != y
org.apache.commons.lang3.math.Fraction.ZERO.numerator % y == 0
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != x
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != y
===========================================================================
org.apache.commons.lang3.math.Fraction.mulAndCheck(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
org.apache.commons.lang3.math.Fraction.ZERO.numerator != return
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != orig(x)
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(x) == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != orig(y)
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(y) == 0
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != orig(x)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != orig(y)
return % orig(x) == 0
return % orig(y) == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, int):::ENTER
x >= 1
y >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > x
org.apache.commons.lang3.math.Fraction.serialVersionUID > y
org.apache.commons.lang3.math.Fraction.ZERO.numerator % x == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < x
org.apache.commons.lang3.math.Fraction.ZERO.numerator % y == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < y
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= x
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= y
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != x
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != y
===========================================================================
org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
return >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(x) == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < orig(x)
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(y) == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < orig(y)
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= orig(x)
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= orig(y)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != orig(x)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != orig(y)
return % orig(x) == 0
return >= orig(x)
return % orig(y) == 0
return >= orig(y)
===========================================================================
org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
fraction.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction):::EXIT801
org.apache.commons.lang3.math.Fraction.ZERO == return
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.denominator
this.denominator one of { 5, 1231 }
fraction.numerator one of { 0, 2, 7 }
fraction.denominator one of { 2, 7, 1231 }
===========================================================================
org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction):::EXIT807
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != fraction.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.numerator == 0
===========================================================================
org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(fraction.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.denominator == orig(fraction.denominator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator)  ==>  (fraction.denominator >= 1)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator != fraction.numerator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.numerator == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.numerator == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator)  ==>  (this.denominator >= 1)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  <==>  (org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (fraction.denominator one of { 2, 7, 1231 })
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (fraction.numerator one of { 0, 2, 7 })
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO == return)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.denominator)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (return has only one value)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (return.denominator == 1)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (return.numerator == 0)
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (this.denominator one of { 5, 1231 })
(org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator)  ==>  (this.numerator == 0)
fraction.denominator >= 1
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.negate():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
this.numerator <= this.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.negate():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == return.denominator
this.denominator == orig(this.denominator)
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % this.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator != return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.numerator == 0
org.apache.commons.lang3.math.Fraction.ZERO.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
this.numerator <= this.denominator
return.numerator % this.numerator == 0
this.numerator != return.numerator
this.numerator % return.numerator == 0
this.numerator + return.numerator == 0
this.denominator != return.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.serialVersionUID > power
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != power
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::EXIT548
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(power)
this.numerator == return.numerator
this.denominator == return.denominator
return == orig(this)
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::EXIT550
org.apache.commons.lang3.math.Fraction.ONE == return
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(power)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.denominator
this.numerator one of { 1, 3, 6 }
this.denominator one of { 1, 5, 10 }
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::EXIT553
org.apache.commons.lang3.math.Fraction.ZERO.denominator == this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(this.denominator)
return has only one value
orig(this) has only one value
orig(power) == -2147483648
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::EXIT555
this.numerator one of { 1, 3, 6 }
this.denominator one of { 1, 5, 10 }
orig(power) one of { -2, -1 }
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::EXIT559
return.denominator one of { 1, 9, 25 }
orig(power) >= 2
orig(power) is a power of 2
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(power) == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < orig(power)
org.apache.commons.lang3.math.Fraction.ZERO.denominator < orig(power)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator <= orig(power)
orig(power) % org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == 0
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != orig(power)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.denominator
this.numerator <= return.numerator
this.numerator != orig(power)
this.denominator != orig(power)
return.numerator != orig(power)
return.denominator != orig(power)
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::EXIT561
this.numerator one of { 1, 3, 6 }
this.denominator one of { 1, 5, 10 }
return.numerator one of { 1, 27 }
return.denominator one of { 1, 125 }
org.apache.commons.lang3.math.Fraction.ZERO.numerator < this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % orig(power) == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < orig(power)
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator < orig(power)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator < orig(power)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator <= orig(power)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != orig(power)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.denominator
this.numerator <= this.denominator
this.numerator <= return.numerator
this.numerator <= return.denominator
this.denominator <= return.numerator
this.denominator <= return.denominator
this.denominator != orig(power)
return.numerator <= return.denominator
return.numerator != orig(power)
return.denominator != orig(power)
===========================================================================
org.apache.commons.lang3.math.Fraction.pow(int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator <= return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != orig(power)
===========================================================================
org.apache.commons.lang3.math.Fraction.reduce():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
this.numerator % org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == 0
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.denominator
this.numerator < this.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.reduce():::EXIT471
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == return.denominator
this.denominator one of { 1, 100 }
===========================================================================
org.apache.commons.lang3.math.Fraction.reduce():::EXIT475
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == this.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(this.denominator)
this.numerator == return.numerator
return == orig(this)
this.numerator one of { -2, 2 }
===========================================================================
org.apache.commons.lang3.math.Fraction.reduce():::EXIT477
this.numerator one of { -2147483648, 50 }
this.denominator one of { 2, 75 }
return.numerator one of { -1073741824, 2 }
===========================================================================
org.apache.commons.lang3.math.Fraction.reduce():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
return.numerator <= 2
return.denominator one of { 1, 3 }
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
this.numerator % org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == 0
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator >= return.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator > return.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator >= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator > return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator > return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > return.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > return.denominator
this.numerator < this.denominator
this.numerator != return.denominator
this.denominator > return.numerator
this.denominator % return.denominator == 0
this.denominator >= return.denominator
return.numerator < return.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.subAndCheck(int, int):::ENTER
===========================================================================
org.apache.commons.lang3.math.Fraction.subAndCheck(int, int):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
===========================================================================
org.apache.commons.lang3.math.Fraction.subtract(org.apache.commons.lang3.math.Fraction):::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator >= fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > fraction.numerator
this.numerator != this.denominator
this.numerator != fraction.denominator
this.denominator >= fraction.numerator
this.denominator >= fraction.denominator
fraction.numerator <= fraction.denominator
===========================================================================
org.apache.commons.lang3.math.Fraction.subtract(org.apache.commons.lang3.math.Fraction):::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == fraction.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == return.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(fraction.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == fraction.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == return.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(fraction.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
fraction.numerator == orig(fraction.numerator)
fraction.denominator == orig(fraction.denominator)
return.denominator >= 1
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > fraction.denominator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.numerator
org.apache.commons.lang3.math.Fraction.serialVersionUID > return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % fraction.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.numerator % return.denominator == 0
org.apache.commons.lang3.math.Fraction.ZERO.numerator < return.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= fraction.denominator
org.apache.commons.lang3.math.Fraction.ZERO.denominator <= return.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != return.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator >= fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != fraction.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != return.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator > fraction.numerator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != return.numerator
this.numerator != this.denominator
this.numerator != fraction.denominator
this.numerator != return.denominator
this.denominator >= fraction.numerator
this.denominator >= fraction.denominator
this.denominator != return.numerator
fraction.numerator <= fraction.denominator
fraction.denominator != return.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.toProperString():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
this.toProperString.toString == "3/5"
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.toProperString():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
this.toProperString == return
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
this.toProperString.toString == return.toString
return.toString == orig(this.toProperString.toString)
===========================================================================
org.apache.commons.lang3.math.Fraction.toString():::ENTER
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
this.toString.toString == "3/5"
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
===========================================================================
org.apache.commons.lang3.math.Fraction.toString():::EXIT
org.apache.commons.lang3.math.Fraction.ZERO == orig(org.apache.commons.lang3.math.Fraction.ZERO)
org.apache.commons.lang3.math.Fraction.ONE == orig(org.apache.commons.lang3.math.Fraction.ONE)
org.apache.commons.lang3.math.Fraction.ONE_HALF == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF)
org.apache.commons.lang3.math.Fraction.ONE_THIRD == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD)
org.apache.commons.lang3.math.Fraction.TWO_THIRDS == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER)
org.apache.commons.lang3.math.Fraction.TWO_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS)
org.apache.commons.lang3.math.Fraction.THREE_QUARTERS == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH)
org.apache.commons.lang3.math.Fraction.TWO_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS)
org.apache.commons.lang3.math.Fraction.THREE_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS)
org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == this.hashCode
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ZERO.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.numerator == orig(this.hashCode)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ZERO.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE.denominator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.numerator)
org.apache.commons.lang3.math.Fraction.ZERO.toString == this.toProperString
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ZERO.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.toProperString)
org.apache.commons.lang3.math.Fraction.ZERO.toString == orig(this.toProperString)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_HALF.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_THIRDS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_QUARTERS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.numerator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.TWO_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.THREE_FIFTHS.denominator)
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator == orig(org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS.denominator)
this.numerator == orig(this.numerator)
this.denominator == orig(this.denominator)
this.toString == return
org.apache.commons.lang3.math.Fraction.ZERO.denominator != this.numerator
org.apache.commons.lang3.math.Fraction.ONE_THIRD.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_QUARTER.denominator != this.denominator
org.apache.commons.lang3.math.Fraction.ONE_FIFTH.denominator != this.numerator
this.toString.toString == return.toString
return.toString == orig(this.toString.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest:::CLASS
===========================================================================
org.apache.commons.lang3.math.FractionTest:::OBJECT
this.fName != null
===========================================================================
org.apache.commons.lang3.math.FractionTest.FractionTest(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.commons.lang3.math.FractionTest.FractionTest(java.lang.String):::EXIT
this.fName == orig(name)
this.fName.toString == name.toString
name.toString == orig(name.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testAbs():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testAbs"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testAbs():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testAbs"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testAdd():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testAdd"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testAdd():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testAdd"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testCompareTo():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testCompareTo"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testCompareTo():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testCompareTo"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testConstants():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testConstants"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testConstants():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testConstants"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testConversions():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testConversions"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testConversions():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testConversions"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testDivide():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testDivide"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testDivide():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testDivide"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testEquals():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testEquals"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testEquals():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testEquals"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testFactory_String"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testFactory_String"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String_double():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testFactory_String_double"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String_double():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testFactory_String_double"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String_improper():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testFactory_String_improper"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String_improper():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testFactory_String_improper"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String_proper():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testFactory_String_proper"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_String_proper():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testFactory_String_proper"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_double():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testFactory_double"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_double():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testFactory_double"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_int_int():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testFactory_int_int"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_int_int():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testFactory_int_int"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testFactory_int_int_int"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testFactory_int_int_int"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testGets():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testGets"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testGets():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testGets"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testHashCode():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testHashCode"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testHashCode():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testHashCode"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testInvert():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testInvert"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testInvert():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testInvert"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testMultiply():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testMultiply"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testMultiply():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testMultiply"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testNegate():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testNegate"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testNegate():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testNegate"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testPow():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testPow"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testPow():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testPow"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testReduce():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testReduce"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testReduce():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testReduce"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testReducedFactory_int_int"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testReducedFactory_int_int"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testSubtract():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testSubtract"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testSubtract():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testSubtract"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testToProperString():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testToProperString"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testToProperString():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testToProperString"
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.lang3.math.FractionTest.testToString():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testToString"
===========================================================================
org.apache.commons.lang3.math.FractionTest.testToString():::EXIT
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testToString"
this.fName.toString == orig(this.fName.toString)
