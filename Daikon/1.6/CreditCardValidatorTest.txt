===========================================================================
junit.framework.Assert:::OBJECT
===========================================================================
junit.framework.Assert.Assert():::EXIT
===========================================================================
junit.framework.Assert.assertEquals(int, int):::ENTER
expected == actual
expected one of { 13, 14, 16 }
===========================================================================
junit.framework.Assert.assertEquals(int, int):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object):::ENTER
expected != null
expected.getClass().getName() == java.lang.String.class
actual != null
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, int, int):::ENTER
expected == actual
message == null
expected one of { 13, 14, 16 }
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, int, int):::EXIT
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
expected != null
actual != null
expected.getClass().getName() == actual.getClass().getName()
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT63
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT
message.toString == orig(message.toString)
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::ENTER
expected has only one value
expected.toString == "5134567890123456"
expected.toString == actual.toString
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::EXIT80
===========================================================================
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::EXIT
expected.toString == "5134567890123456"
message.toString == orig(message.toString)
expected.toString == actual.toString
expected.toString == orig(expected.toString)
expected.toString == orig(actual.toString)
===========================================================================
junit.framework.Assert.assertFalse(boolean):::ENTER
condition == false
===========================================================================
junit.framework.Assert.assertFalse(boolean):::EXIT
===========================================================================
junit.framework.Assert.assertFalse(java.lang.String, boolean):::ENTER
condition == false
===========================================================================
junit.framework.Assert.assertFalse(java.lang.String, boolean):::EXIT
message.toString == orig(message.toString)
===========================================================================
junit.framework.Assert.assertNotNull(java.lang.Object):::ENTER
object != null
object.getClass().getName() == java.lang.String.class
===========================================================================
junit.framework.Assert.assertNotNull(java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object):::ENTER
message == null
object != null
object.getClass().getName() == java.lang.String.class
===========================================================================
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertNull(java.lang.Object):::ENTER
object == null
===========================================================================
junit.framework.Assert.assertNull(java.lang.Object):::EXIT
===========================================================================
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object):::ENTER
message.toString == "validate()"
object == null
===========================================================================
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object):::EXIT
message.toString == "validate()"
message.toString == orig(message.toString)
===========================================================================
junit.framework.Assert.assertTrue(boolean):::ENTER
condition == true
===========================================================================
junit.framework.Assert.assertTrue(boolean):::EXIT
===========================================================================
junit.framework.Assert.assertTrue(java.lang.String, boolean):::ENTER
condition == true
===========================================================================
junit.framework.Assert.assertTrue(java.lang.String, boolean):::EXIT
message.toString == orig(message.toString)
===========================================================================
junit.framework.TestCase:::OBJECT
this.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName != null
===========================================================================
junit.framework.TestCase.TestCase(java.lang.String):::ENTER
name != null
===========================================================================
junit.framework.TestCase.TestCase(java.lang.String):::EXIT
this.fName == orig(name)
this.fName.toString == name.toString
name.toString == orig(name.toString)
===========================================================================
junit.framework.TestCase.countTestCases():::ENTER
===========================================================================
junit.framework.TestCase.countTestCases():::EXIT
this.fName == orig(this.fName)
return == 1
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.run(junit.framework.TestResult):::ENTER
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
result has only one value
result != null
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fRunTests >= size(result.fFailures[])
===========================================================================
junit.framework.TestCase.run(junit.framework.TestResult):::EXIT
this.fName == orig(this.fName)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
this.fName.toString == orig(this.fName.toString)
result.fRunTests - orig(result.fRunTests) - 1 == 0
result.fRunTests >= size(result.fListeners[])
orig(result.fRunTests) >= size(result.fFailures[])
===========================================================================
junit.framework.TestCase.runBare():::ENTER
===========================================================================
junit.framework.TestCase.runBare():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.runTest():::ENTER
===========================================================================
junit.framework.TestCase.runTest():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.setUp():::ENTER
===========================================================================
junit.framework.TestCase.setUp():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestCase.tearDown():::ENTER
===========================================================================
junit.framework.TestCase.tearDown():::EXIT
this.fName == orig(this.fName)
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestResult$1:::OBJECT
this.val$test != null
this.val$test.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.val$test.fName != null
===========================================================================
junit.framework.TestResult$1.TestResult$1(junit.framework.TestCase):::ENTER
$hidden$1 != null
$hidden$1.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
$hidden$1.fName != null
===========================================================================
junit.framework.TestResult$1.TestResult$1(junit.framework.TestCase):::EXIT
this.val$test == orig($hidden$1)
this.val$test.fName == $hidden$1.fName
$hidden$1.fName == orig($hidden$1.fName)
$hidden$1.fName != null
this.val$test.getClass().getName() == orig($hidden$1.getClass().getName())
this.val$test.fName.toString == $hidden$1.fName.toString
$hidden$1.fName.toString == orig($hidden$1.fName.toString)
===========================================================================
junit.framework.TestResult$1.protect():::ENTER
===========================================================================
junit.framework.TestResult$1.protect():::EXIT
this.val$test == orig(this.val$test)
this.val$test.fName == orig(this.val$test.fName)
this.val$test.getClass().getName() == orig(this.val$test.getClass().getName())
this.val$test.fName.toString == orig(this.val$test.fName.toString)
===========================================================================
junit.framework.TestResult:::OBJECT
this.fFailures[] == this.fErrors[]
this has only one value
this.fFailures has only one value
this.fFailures != null
this.fFailures[] == []
this.fFailures[].getClass().getName() == []
this.fErrors has only one value
this.fErrors != null
this.fListeners has only one value
this.fListeners != null
this.fListeners[] elements has only one value
this.fListeners[] elements != null
this.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
this.fListeners[].getClass().getName() one of { [], [junit.textui.ResultPrinter] }
this.fRunTests >= 0
this.fStop == false
size(this.fListeners[]) one of { 0, 1 }
this.fRunTests >= size(this.fFailures[])
this.fRunTests >= size(this.fListeners[])-1
size(this.fFailures[]) <= size(this.fListeners[])
size(this.fFailures[]) >= size(this.fListeners[])-1
size(this.fFailures[])-1 <= size(this.fListeners[])-1
===========================================================================
junit.framework.TestResult.TestResult():::EXIT
this.fFailures[] == this.fListeners[]
this.fRunTests == size(this.fFailures[])
this.fRunTests == size(this.fErrors[])
this.fRunTests == size(this.fListeners[])
===========================================================================
junit.framework.TestResult.addListener(junit.framework.TestListener):::ENTER
this.fFailures[] == this.fListeners[]
this.fRunTests == size(this.fFailures[])
this.fRunTests == size(this.fErrors[])
this.fRunTests == size(this.fListeners[])
listener has only one value
listener.getClass().getName() == junit.textui.ResultPrinter.class
===========================================================================
junit.framework.TestResult.addListener(junit.framework.TestListener):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fFailures[] == orig(this.fListeners[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fRunTests == orig(this.fRunTests)
this.fRunTests == size(this.fFailures[])
this.fRunTests == size(this.fErrors[])
this.fRunTests == size(this.fListeners[])-1
this.fRunTests == orig(size(this.fFailures[]))
this.fRunTests == orig(size(this.fErrors[]))
this.fRunTests == orig(size(this.fListeners[]))
this.fStop == orig(this.fStop)
orig(listener) == this.fListeners[this.fRunTests]
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
orig(listener) in this.fListeners[]
this.fListeners[] elements == orig(listener)
this.fListeners[] elements == this.fListeners[this.fRunTests]
orig(listener.getClass().getName()) in this.fListeners[].getClass().getName()
===========================================================================
junit.framework.TestResult.cloneListeners():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.cloneListeners():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == return[]
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
return[] == orig(this.fListeners[])
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == size(return[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
return != null
return[] contains no nulls and has only one value, of length 1
return[] elements has only one value
return[] elements != null
return[].getClass().getName() == [junit.textui.ResultPrinter]
return[].getClass().getName() elements == junit.textui.ResultPrinter.class
size(return[]) == 1
this.fRunTests >= size(return[])
===========================================================================
junit.framework.TestResult.endTest(junit.framework.Test):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
size(this.fListeners[]) == 1
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.endTest(junit.framework.Test):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.errorCount():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.errorCount():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
return == size(this.fFailures[])
return == size(this.fErrors[])
return == size(this.fListeners[])-1
return == orig(size(this.fFailures[]))
return == orig(size(this.fErrors[]))
return == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
this.fListeners[] elements == this.fListeners[return]
===========================================================================
junit.framework.TestResult.errors():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.errors():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
return has only one value
return.getClass().getName() == java.util.Vector$1.class
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.failureCount():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.failureCount():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
return == size(this.fFailures[])
return == size(this.fErrors[])
return == size(this.fListeners[])-1
return == orig(size(this.fFailures[]))
return == orig(size(this.fErrors[]))
return == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
this.fListeners[] elements == this.fListeners[return]
===========================================================================
junit.framework.TestResult.failures():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.failures():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
return has only one value
return.getClass().getName() == java.util.Vector$1.class
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.run(junit.framework.TestCase):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
test.fName != null
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.run(junit.framework.TestCase):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fStop == orig(this.fStop)
test.fName == orig(test.fName)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test.fName != null
size(this.fListeners[]) == 1
this.fRunTests - orig(this.fRunTests) - 1 == 0
this.fRunTests >= size(this.fListeners[])
test.fName.toString == orig(test.fName.toString)
orig(this.fRunTests) >= size(this.fFailures[])
===========================================================================
junit.framework.TestResult.runCount():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.runCount():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == return
this.fStop == orig(this.fStop)
return == orig(this.fRunTests)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return == 20
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
p != null
p.getClass().getName() == junit.framework.TestResult$1.class
size(this.fListeners[]) == 1
this.fRunTests >= size(this.fListeners[])
test.getClass().getName() != p.getClass().getName()
===========================================================================
junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fRunTests >= size(this.fListeners[])
===========================================================================
junit.framework.TestResult.shouldStop():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.shouldStop():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == return
return == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return == false
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.shouldStop():::EXIT;condition="not(return == true)"
===========================================================================
junit.framework.TestResult.startTest(junit.framework.Test):::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
test != null
test.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.startTest(junit.framework.Test):::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
size(this.fListeners[]) == 1
this.fRunTests - orig(this.fRunTests) - 1 == 0
this.fRunTests >= size(this.fListeners[])
orig(this.fRunTests) >= size(this.fFailures[])
===========================================================================
junit.framework.TestResult.wasSuccessful():::ENTER
size(this.fFailures[]) == size(this.fListeners[])-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.wasSuccessful():::EXIT164
===========================================================================
junit.framework.TestResult.wasSuccessful():::EXIT164;condition="return == true"
===========================================================================
junit.framework.TestResult.wasSuccessful():::EXIT
this.fFailures == orig(this.fFailures)
this.fFailures[] == orig(this.fFailures[])
this.fFailures[] == orig(this.fErrors[])
this.fErrors == orig(this.fErrors)
this.fListeners == orig(this.fListeners)
this.fListeners[] == orig(this.fListeners[])
this.fRunTests == orig(this.fRunTests)
this.fStop == orig(this.fStop)
size(this.fFailures[]) == size(this.fListeners[])-1
size(this.fFailures[]) == orig(size(this.fListeners[]))-1
this.fListeners[] contains no nulls and has only one value, of length 1
this.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
this.fRunTests == 20
return == true
size(this.fListeners[]) == 1
===========================================================================
junit.framework.TestResult.wasSuccessful():::EXIT;condition="return == true"
===========================================================================
junit.framework.TestSuite:::CLASS
===========================================================================
junit.framework.TestSuite:::OBJECT
this.fTests != null
this.fTests[] elements != null
this.fName.toString == "org.apache.commons.validator.routines.CreditCardValidatorTest"
===========================================================================
junit.framework.TestSuite.TestSuite():::EXIT
junit.framework.TestSuite.class$0 == junit.framework.TestSuite.class$1
this.fTests has only one value
this.fTests[] == []
this.fTests[].getClass().getName() == []
this.fName == null
junit.framework.TestSuite.class$0 == null
===========================================================================
junit.framework.TestSuite.TestSuite(java.lang.Class):::ENTER
theClass has only one value
===========================================================================
junit.framework.TestSuite.TestSuite(java.lang.Class):::EXIT81
===========================================================================
junit.framework.TestSuite.TestSuite(java.lang.Class):::EXIT
this.fTests has only one value
this.fTests[] contains no nulls and has only one value, of length 20
this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest]
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName has only one value
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$1 has only one value
size(this.fTests[]) == 20
===========================================================================
junit.framework.TestSuite.addTest(junit.framework.Test):::ENTER
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
test != null
===========================================================================
junit.framework.TestSuite.addTest(junit.framework.Test):::EXIT
this.fTests == orig(this.fTests)
this.fName == orig(this.fName)
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
size(this.fTests[])-1 == orig(size(this.fTests[]))
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
orig(test) in this.fTests[]
orig(test.getClass().getName()) in this.fTests[].getClass().getName()
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class):::ENTER
size(this.fTests[]) == size(names[])
this has only one value
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName has only one value
this.fName != null
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
m != null
names has only one value
names != null
names[] elements != null
names[].getClass().getName() elements == java.lang.String.class
theClass has only one value
theClass != null
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class):::EXIT111
this.fTests[] == orig(this.fTests[])
names[] == orig(names[])
size(this.fTests[]) == orig(size(names[]))
this.fTests[] contains no nulls and has only one value, of length 20
this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest]
names[] contains no nulls and has only one value, of length 20
names[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
size(this.fTests[]) == 20
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class):::EXIT115
size(names[])-1 == orig(size(this.fTests[]))
size(names[])-1 == orig(size(names[]))
===========================================================================
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.Vector, java.lang.Class):::EXIT
this.fTests == orig(this.fTests)
this.fName == orig(this.fName)
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName has only one value
this.fName != null
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
names[] elements != null
names[].getClass().getName() elements == java.lang.String.class
this.fName.toString == orig(this.fName.toString)
size(this.fTests[]) >= orig(size(names[]))
size(names[])-1 <= orig(size(names[]))
size(names[])-1 >= orig(size(names[]))-1
===========================================================================
junit.framework.TestSuite.addTestSuite(java.lang.Class):::ENTER
junit.framework.TestSuite.class$0 == junit.framework.TestSuite.class$1
this has only one value
this.fTests has only one value
this.fTests[] == []
this.fTests[].getClass().getName() == []
this.fName == null
junit.framework.TestSuite.class$0 == null
testClass has only one value
===========================================================================
junit.framework.TestSuite.addTestSuite(java.lang.Class):::EXIT
this.fTests == orig(this.fTests)
this.fName == orig(this.fName)
size(this.fTests[])-1 == orig(size(this.fTests[]))
this.fTests has only one value
this.fTests[] contains no nulls and has only one value, of length 1
this.fTests[] elements has only one value
this.fTests[].getClass().getName() == [junit.framework.TestSuite]
this.fTests[].getClass().getName() elements == junit.framework.TestSuite.class
this.fName == null
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$1 has only one value
size(this.fTests[]) == 1
===========================================================================
junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String):::ENTER
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
theClass has only one value
theClass != null
name != null
===========================================================================
junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String):::EXIT144
===========================================================================
junit.framework.TestSuite.createTest(java.lang.Class, java.lang.String):::EXIT
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
return != null
return.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
name.toString == orig(name.toString)
===========================================================================
junit.framework.TestSuite.getTestConstructor(java.lang.Class):::ENTER
theClass has only one value
theClass != null
===========================================================================
junit.framework.TestSuite.getTestConstructor(java.lang.Class):::EXIT177
===========================================================================
junit.framework.TestSuite.getTestConstructor(java.lang.Class):::EXIT
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
return != null
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::ENTER
this has only one value
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName has only one value
this.fName != null
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
m != null
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT185
return == true
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT185;condition="return == true"
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT186
this.fTests[] contains no nulls and has only one value, of length 20
this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest]
return == false
size(this.fTests[]) == 20
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT186;condition="not(return == true)"
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
this.fName == orig(this.fName)
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
(return == false)  <==>  (size(this.fTests[]) == 20)
(return == false)  ==>  (this.fTests[] contains no nulls and has only one value, of length 20)
(return == false)  ==>  (this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest])
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName has only one value
this.fName != null
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT;condition="return == true"
return == true
===========================================================================
junit.framework.TestSuite.isPublicTestMethod(java.lang.reflect.Method):::EXIT;condition="not(return == true)"
this.fTests[] contains no nulls and has only one value, of length 20
this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest]
return == false
size(this.fTests[]) == 20
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::ENTER
this has only one value
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName has only one value
this.fName != null
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
m != null
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT192
return == true
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT192;condition="return == true"
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT193
this.fTests[] contains no nulls and has only one value, of length 20
this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest]
return == false
size(this.fTests[]) == 20
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT193;condition="not(return == true)"
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
this.fName == orig(this.fName)
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
(return == false)  <==>  (size(this.fTests[]) == 20)
(return == false)  ==>  (this.fTests[] contains no nulls and has only one value, of length 20)
(return == false)  ==>  (this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest])
this.fTests has only one value
this.fTests[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidatorTest.class
this.fName has only one value
this.fName != null
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT;condition="return == true"
return == true
===========================================================================
junit.framework.TestSuite.isTestMethod(java.lang.reflect.Method):::EXIT;condition="not(return == true)"
this.fTests[] contains no nulls and has only one value, of length 20
this.fTests[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest]
return == false
size(this.fTests[]) == 20
===========================================================================
junit.framework.TestSuite.run(junit.framework.TestResult):::ENTER
result.fFailures[] == result.fErrors[]
result.fRunTests == size(result.fFailures[])
result.fRunTests == size(result.fErrors[])
result.fRunTests == size(result.fListeners[])-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest] }
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$1 has only one value
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(this.fTests[]) one of { 1, 20 }
size(result.fListeners[]) == 1
result.fListeners[] elements == result.fListeners[result.fRunTests]
===========================================================================
junit.framework.TestSuite.run(junit.framework.TestResult):::EXIT
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
this.fName == orig(this.fName)
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
orig(result.fRunTests) == size(result.fFailures[])
orig(result.fRunTests) == size(result.fErrors[])
orig(result.fRunTests) == size(result.fListeners[])-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest] }
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$1 has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fRunTests == 20
result.fStop == false
size(this.fTests[]) one of { 1, 20 }
size(result.fListeners[]) == 1
this.fName.toString == orig(this.fName.toString)
result.fListeners[] elements == result.fListeners[orig(result.fRunTests)]
===========================================================================
junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult):::ENTER
test == this.fTests[result.fRunTests]
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest] }
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
test != null
result has only one value
result != null
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(this.fTests[]) one of { 1, 20 }
size(result.fListeners[]) == 1
test in this.fTests[]
test.getClass().getName() in this.fTests[].getClass().getName()
result.fRunTests <= size(this.fTests[])-1
result.fRunTests >= size(result.fFailures[])
size(this.fTests[]) >= size(result.fListeners[])
size(this.fTests[])-1 >= size(result.fFailures[])
size(this.fTests[])-1 != size(result.fListeners[])
===========================================================================
junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult):::EXIT
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
this.fName == orig(this.fName)
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
orig(test) == this.fTests[orig(result.fRunTests)]
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest] }
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$0 != null
junit.framework.TestSuite.class$1 has only one value
junit.framework.TestSuite.class$1 != null
result.fFailures has only one value
result.fFailures != null
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fErrors != null
result.fListeners has only one value
result.fListeners != null
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[] elements != null
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(this.fTests[]) one of { 1, 20 }
size(result.fListeners[]) == 1
orig(test) in this.fTests[]
orig(test.getClass().getName()) in this.fTests[].getClass().getName()
this.fName.toString == orig(this.fName.toString)
result.fRunTests > orig(result.fRunTests)
result.fRunTests >= size(result.fListeners[])
orig(result.fRunTests) <= size(this.fTests[])-1
orig(result.fRunTests) >= size(result.fFailures[])
size(this.fTests[]) >= size(result.fListeners[])
size(this.fTests[])-1 >= size(result.fFailures[])
size(this.fTests[])-1 != size(result.fListeners[])
result.fRunTests - orig(result.fRunTests) + size(this.fTests[]) - 21 == 0
result.fRunTests - orig(result.fRunTests) + size(this.fTests[])-1 - 20 == 0
===========================================================================
junit.framework.TestSuite.tests():::ENTER
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest] }
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$1 has only one value
size(this.fTests[]) one of { 1, 20 }
===========================================================================
junit.framework.TestSuite.tests():::EXIT
this.fTests == orig(this.fTests)
this.fTests[] == orig(this.fTests[])
this.fName == orig(this.fName)
junit.framework.TestSuite.class$0 == orig(junit.framework.TestSuite.class$0)
junit.framework.TestSuite.class$1 == orig(junit.framework.TestSuite.class$1)
this.fTests[].getClass().getName() one of { [junit.framework.TestSuite], [org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest, org.apache.commons.validator.routines.CreditCardValidatorTest] }
junit.framework.TestSuite.class$0 has only one value
junit.framework.TestSuite.class$1 has only one value
return.getClass().getName() == java.util.Vector$1.class
size(this.fTests[]) one of { 1, 20 }
this.fName.toString == orig(this.fName.toString)
===========================================================================
junit.runner.BaseTestRunner:::CLASS
junit.runner.BaseTestRunner.SUITE_METHODNAME has only one value
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == "suite"
junit.runner.BaseTestRunner.fPreferences has only one value
junit.runner.BaseTestRunner.fgMaxMessageLength == 500
junit.runner.BaseTestRunner.fgFilterStack == true
===========================================================================
junit.runner.BaseTestRunner:::OBJECT
junit.runner.BaseTestRunner.fgFilterStack == this.fLoading
this has only one value
this.getClass().getName() == junit.textui.TestRunner.class
===========================================================================
junit.runner.BaseTestRunner.BaseTestRunner():::EXIT
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String):::ENTER
key has only one value
key.toString == "maxmessage"
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String):::EXIT
key.toString == "maxmessage"
return == null
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String, int):::ENTER
key has only one value
key.toString == "maxmessage"
dflt == 500
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String, int):::EXIT243
===========================================================================
junit.runner.BaseTestRunner.getPreference(java.lang.String, int):::EXIT
key.toString == "maxmessage"
return == 500
===========================================================================
junit.runner.BaseTestRunner.getPreferences():::EXIT
return has only one value
===========================================================================
junit.runner.BaseTestRunner.getPreferencesFile():::EXIT
return has only one value
===========================================================================
junit.textui.ResultPrinter:::OBJECT
this has only one value
this.fWriter has only one value
this.fWriter != null
this.fColumn >= 0
===========================================================================
junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream):::ENTER
writer has only one value
===========================================================================
junit.textui.ResultPrinter.ResultPrinter(java.io.PrintStream):::EXIT
this.fWriter == orig(writer)
this.fColumn == 0
===========================================================================
junit.textui.ResultPrinter.elapsedTimeAsString(long):::ENTER
this.fColumn == 20
runTime == 6351
===========================================================================
junit.textui.ResultPrinter.elapsedTimeAsString(long):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
this.fColumn == 20
return has only one value
return.toString == "6.351"
===========================================================================
junit.textui.ResultPrinter.endTest(junit.framework.Test):::ENTER
test != null
test.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
===========================================================================
junit.textui.ResultPrinter.endTest(junit.framework.Test):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
===========================================================================
junit.textui.ResultPrinter.getWriter():::ENTER
===========================================================================
junit.textui.ResultPrinter.getWriter():::EXIT
this.fWriter == return
this.fColumn == orig(this.fColumn)
return == orig(this.fWriter)
return has only one value
return != null
===========================================================================
junit.textui.ResultPrinter.print(junit.framework.TestResult, long):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 20
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
runTime == 6351
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
===========================================================================
junit.textui.ResultPrinter.print(junit.framework.TestResult, long):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 20
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String):::ENTER
this.fColumn == 20
booBoos.getClass().getName() == java.util.Vector$1.class
count == 0
type.toString one of { "error", "failure" }
===========================================================================
junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String):::EXIT55
===========================================================================
junit.textui.ResultPrinter.printDefects(java.util.Enumeration, int, java.lang.String):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
this.fColumn == 20
type.toString one of { "error", "failure" }
type.toString == orig(type.toString)
===========================================================================
junit.textui.ResultPrinter.printErrors(junit.framework.TestResult):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 20
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
===========================================================================
junit.textui.ResultPrinter.printErrors(junit.framework.TestResult):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 20
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printFailures(junit.framework.TestResult):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 20
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
===========================================================================
junit.textui.ResultPrinter.printFailures(junit.framework.TestResult):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 20
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printFooter(junit.framework.TestResult):::ENTER
this.fColumn == result.fRunTests
result.fFailures[] == result.fErrors[]
size(result.fFailures[]) == size(result.fListeners[])-1
this.fColumn == 20
result has only one value
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
result.fListeners[] elements == this
this in result.fListeners[]
===========================================================================
junit.textui.ResultPrinter.printFooter(junit.framework.TestResult):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == result.fRunTests
this.fColumn == orig(this.fColumn)
this.fColumn == orig(result.fRunTests)
result.fFailures == orig(result.fFailures)
result.fFailures[] == result.fErrors[]
result.fFailures[] == orig(result.fFailures[])
result.fFailures[] == orig(result.fErrors[])
result.fErrors == orig(result.fErrors)
result.fListeners == orig(result.fListeners)
result.fListeners[] == orig(result.fListeners[])
result.fStop == orig(result.fStop)
size(result.fFailures[]) == size(result.fListeners[])-1
size(result.fFailures[]) == orig(size(result.fListeners[]))-1
this.fColumn == 20
result.fFailures has only one value
result.fFailures[] == []
result.fFailures[].getClass().getName() == []
result.fErrors has only one value
result.fListeners has only one value
result.fListeners[] contains no nulls and has only one value, of length 1
result.fListeners[] elements has only one value
result.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
result.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
result.fStop == false
size(result.fListeners[]) == 1
orig(this) in result.fListeners[]
result.fListeners[] elements == orig(this)
===========================================================================
junit.textui.ResultPrinter.printHeader(long):::ENTER
this.fColumn == 20
runTime == 6351
===========================================================================
junit.textui.ResultPrinter.printHeader(long):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn == orig(this.fColumn)
this.fColumn == 20
===========================================================================
junit.textui.ResultPrinter.startTest(junit.framework.Test):::ENTER
test != null
test.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.class
===========================================================================
junit.textui.ResultPrinter.startTest(junit.framework.Test):::EXIT
this.fWriter == orig(this.fWriter)
this.fColumn - orig(this.fColumn) - 1 == 0
===========================================================================
junit.textui.TestRunner:::CLASS
junit.runner.BaseTestRunner.SUITE_METHODNAME has only one value
junit.runner.BaseTestRunner.SUITE_METHODNAME != null
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == "suite"
junit.runner.BaseTestRunner.fPreferences has only one value
junit.runner.BaseTestRunner.fPreferences != null
junit.runner.BaseTestRunner.fgMaxMessageLength == 500
junit.runner.BaseTestRunner.fgFilterStack == true
===========================================================================
junit.textui.TestRunner:::OBJECT
junit.runner.BaseTestRunner.fgFilterStack == this.fLoading
this has only one value
this.fPrinter has only one value
this.fPrinter.fWriter has only one value
this.fPrinter.fColumn one of { 0, 20 }
this.fPrinter.fColumn >= junit.textui.TestRunner.SUCCESS_EXIT
this.fPrinter.fColumn != junit.textui.TestRunner.FAILURE_EXIT
this.fPrinter.fColumn != junit.textui.TestRunner.EXCEPTION_EXIT
this.fPrinter.fColumn < junit.runner.BaseTestRunner.fgMaxMessageLength
===========================================================================
junit.textui.TestRunner.TestRunner():::EXIT
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
===========================================================================
junit.textui.TestRunner.TestRunner(java.io.PrintStream):::ENTER
writer has only one value
===========================================================================
junit.textui.TestRunner.TestRunner(java.io.PrintStream):::EXIT
this.fPrinter.fWriter == orig(writer)
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
===========================================================================
junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter):::ENTER
printer has only one value
printer.fWriter has only one value
printer.fColumn == 0
===========================================================================
junit.textui.TestRunner.TestRunner(junit.textui.ResultPrinter):::EXIT
this.fPrinter == orig(printer)
this.fPrinter.fWriter == printer.fWriter
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
junit.textui.TestRunner.SUCCESS_EXIT == printer.fColumn
junit.textui.TestRunner.SUCCESS_EXIT == orig(printer.fColumn)
printer.fWriter == orig(printer.fWriter)
printer.fWriter has only one value
===========================================================================
junit.textui.TestRunner.createTestResult():::ENTER
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
===========================================================================
junit.textui.TestRunner.createTestResult():::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
junit.textui.TestRunner.SUCCESS_EXIT == return.fRunTests
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
return.fFailures[] == return.fErrors[]
return.fFailures[] == return.fListeners[]
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fErrors has only one value
return.fListeners has only one value
return.fStop == false
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test):::ENTER
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
test has only one value
test.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test):::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == return.fRunTests
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])-1
junit.textui.TestRunner.FAILURE_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
return.fFailures[] == return.fErrors[]
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fErrors has only one value
return.fListeners has only one value
return.fListeners[] contains no nulls and has only one value, of length 1
return.fListeners[] elements has only one value
return.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
return.fRunTests == 20
return.fStop == false
return.fListeners[] elements == this.fPrinter
this.fPrinter in return.fListeners[]
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
return.fListeners[] elements == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test, boolean):::ENTER
this.fPrinter.fColumn == junit.textui.TestRunner.SUCCESS_EXIT
suite has only one value
suite.getClass().getName() == junit.framework.TestSuite.class
wait == false
===========================================================================
junit.textui.TestRunner.doRun(junit.framework.Test, boolean):::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == return.fRunTests
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])-1
junit.textui.TestRunner.FAILURE_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
return.fFailures[] == return.fErrors[]
return.fStop == orig(wait)
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fErrors has only one value
return.fListeners has only one value
return.fListeners[] contains no nulls and has only one value, of length 1
return.fListeners[] elements has only one value
return.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
return.fRunTests == 20
return.fStop == false
return.fListeners[] elements == this.fPrinter
this.fPrinter in return.fListeners[]
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
return.fListeners[] elements == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
===========================================================================
junit.textui.TestRunner.pause(boolean):::ENTER
this.fPrinter.fColumn == 20
wait == false
===========================================================================
junit.textui.TestRunner.pause(boolean):::EXIT126
===========================================================================
junit.textui.TestRunner.pause(boolean):::EXIT
this.fPrinter == orig(this.fPrinter)
this.fPrinter.fWriter == orig(this.fPrinter.fWriter)
this.fPrinter.fColumn == orig(this.fPrinter.fColumn)
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
junit.runner.BaseTestRunner.fgFilterStack == orig(this.fLoading)
this.fPrinter.fColumn == 20
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
===========================================================================
junit.textui.TestRunner.run(junit.framework.Test):::ENTER
test has only one value
test.getClass().getName() == junit.framework.TestSuite.class
===========================================================================
junit.textui.TestRunner.run(junit.framework.Test):::EXIT
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fFailures[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fErrors[])
junit.textui.TestRunner.SUCCESS_EXIT == size(return.fListeners[])-1
junit.textui.TestRunner.FAILURE_EXIT == size(return.fListeners[])
junit.runner.BaseTestRunner.SUITE_METHODNAME == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME)
junit.runner.BaseTestRunner.fPreferences == orig(junit.runner.BaseTestRunner.fPreferences)
junit.runner.BaseTestRunner.fgMaxMessageLength == orig(junit.runner.BaseTestRunner.fgMaxMessageLength)
junit.runner.BaseTestRunner.fgFilterStack == orig(junit.runner.BaseTestRunner.fgFilterStack)
return.fFailures[] == return.fErrors[]
return has only one value
return.fFailures has only one value
return.fFailures[] == []
return.fFailures[].getClass().getName() == []
return.fErrors has only one value
return.fListeners has only one value
return.fListeners[] contains no nulls and has only one value, of length 1
return.fListeners[] elements has only one value
return.fListeners[].getClass().getName() == [junit.textui.ResultPrinter]
return.fListeners[].getClass().getName() elements == junit.textui.ResultPrinter.class
return.fRunTests == 20
return.fStop == false
junit.runner.BaseTestRunner.SUITE_METHODNAME.toString == orig(junit.runner.BaseTestRunner.SUITE_METHODNAME.toString)
return.fListeners[] elements == return.fListeners[junit.textui.TestRunner.SUCCESS_EXIT]
===========================================================================
org.apache.commons.validator.daikon.CreditCardValidatorTest.main(java.lang.String[]):::ENTER
arg has only one value
arg.getClass().getName() == java.lang.String[].class
arg[] == []
arg[].toString == []
===========================================================================
org.apache.commons.validator.daikon.CreditCardValidatorTest.main(java.lang.String[]):::EXIT
arg[] == orig(arg[])
arg[] == []
arg[].toString == []
===========================================================================
org.apache.commons.validator.routines.CodeValidator:::CLASS
===========================================================================
org.apache.commons.validator.routines.CodeValidator:::OBJECT
this.regexValidator != null
this.regexValidator.patterns != null
this.regexValidator.patterns.getClass().getName() == java.util.regex.Pattern[].class
this.regexValidator.patterns[] elements != null
this.regexValidator.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
this.minLength one of { -1, 12 }
this.minLength != 0
this.maxLength one of { -1, 19 }
this.maxLength != 0
this.checkdigit.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
size(this.regexValidator.patterns[]) one of { 1, 3, 7 }
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > this.minLength
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > this.maxLength
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > size(this.regexValidator.patterns[])
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < this.minLength
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < this.maxLength
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(this.regexValidator.patterns[])-1
this.regexValidator.patterns.getClass().getName() != this.checkdigit.getClass().getName()
this.minLength <= this.maxLength
this.minLength != size(this.regexValidator.patterns[])
size(this.regexValidator.patterns[])-1 % this.minLength == 0
this.minLength != size(this.regexValidator.patterns[])-1
this.maxLength != size(this.regexValidator.patterns[])
size(this.regexValidator.patterns[])-1 % this.maxLength == 0
this.maxLength != size(this.regexValidator.patterns[])-1
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(java.lang.String, int, int, org.apache.commons.validator.routines.checkdigit.CheckDigit):::ENTER
minLength one of { -1, 12 }
maxLength one of { -1, 19 }
checkdigit has only one value
checkdigit.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
minLength <= maxLength
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(java.lang.String, int, int, org.apache.commons.validator.routines.checkdigit.CheckDigit):::EXIT
this.minLength == orig(minLength)
this.maxLength == orig(maxLength)
this.checkdigit == orig(checkdigit)
this.regexValidator.patterns[].getClass().getName() == [java.util.regex.Pattern]
this.checkdigit has only one value
size(this.regexValidator.patterns[]) == 1
this.checkdigit.getClass().getName() == orig(checkdigit.getClass().getName())
regex.toString == orig(regex.toString)
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(java.lang.String, org.apache.commons.validator.routines.checkdigit.CheckDigit):::ENTER
checkdigit has only one value
checkdigit.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(java.lang.String, org.apache.commons.validator.routines.checkdigit.CheckDigit):::EXIT
this.minLength == this.maxLength
this.checkdigit == orig(checkdigit)
this.regexValidator.patterns[].getClass().getName() == [java.util.regex.Pattern]
this.minLength == -1
this.checkdigit has only one value
size(this.regexValidator.patterns[]) == 1
this.checkdigit.getClass().getName() == orig(checkdigit.getClass().getName())
regex.toString == orig(regex.toString)
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(org.apache.commons.validator.routines.RegexValidator, int, int, org.apache.commons.validator.routines.checkdigit.CheckDigit):::ENTER
minLength == maxLength
regexValidator.patterns.getClass().getName() == java.util.regex.Pattern[].class
regexValidator.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
minLength == -1
checkdigit.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
size(regexValidator.patterns[]) one of { 1, 3, 7 }
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(org.apache.commons.validator.routines.RegexValidator, int, int, org.apache.commons.validator.routines.checkdigit.CheckDigit):::EXIT
this.regexValidator == orig(regexValidator)
this.regexValidator.patterns == regexValidator.patterns
this.regexValidator.patterns[] == regexValidator.patterns[]
this.minLength == this.maxLength
this.minLength == orig(minLength)
this.minLength == orig(maxLength)
this.checkdigit == orig(checkdigit)
regexValidator.patterns == orig(regexValidator.patterns)
regexValidator.patterns[] == orig(regexValidator.patterns[])
this.minLength == -1
regexValidator.patterns.getClass().getName() == java.util.regex.Pattern[].class
regexValidator.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
size(regexValidator.patterns[]) one of { 1, 3, 7 }
this.regexValidator.patterns.getClass().getName() == regexValidator.patterns.getClass().getName()
this.checkdigit.getClass().getName() == orig(checkdigit.getClass().getName())
regexValidator.patterns.getClass().getName() == orig(regexValidator.patterns.getClass().getName())
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(org.apache.commons.validator.routines.RegexValidator, org.apache.commons.validator.routines.checkdigit.CheckDigit):::ENTER
regexValidator.patterns.getClass().getName() == java.util.regex.Pattern[].class
regexValidator.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
checkdigit.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
size(regexValidator.patterns[]) one of { 1, 3, 7 }
===========================================================================
org.apache.commons.validator.routines.CodeValidator.CodeValidator(org.apache.commons.validator.routines.RegexValidator, org.apache.commons.validator.routines.checkdigit.CheckDigit):::EXIT
this.regexValidator == orig(regexValidator)
this.regexValidator.patterns == regexValidator.patterns
this.regexValidator.patterns[] == regexValidator.patterns[]
this.minLength == this.maxLength
this.checkdigit == orig(checkdigit)
regexValidator.patterns == orig(regexValidator.patterns)
regexValidator.patterns[] == orig(regexValidator.patterns[])
this.minLength == -1
regexValidator.patterns.getClass().getName() == java.util.regex.Pattern[].class
regexValidator.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
size(regexValidator.patterns[]) one of { 1, 3, 7 }
this.regexValidator.patterns.getClass().getName() == regexValidator.patterns.getClass().getName()
this.checkdigit.getClass().getName() == orig(checkdigit.getClass().getName())
regexValidator.patterns.getClass().getName() == orig(regexValidator.patterns.getClass().getName())
===========================================================================
org.apache.commons.validator.routines.CodeValidator.getRegexValidator():::ENTER
this.minLength == this.maxLength
this.minLength == -1
this.checkdigit has only one value
this.minLength < size(this.regexValidator.patterns[])-1
===========================================================================
org.apache.commons.validator.routines.CodeValidator.getRegexValidator():::EXIT
this.regexValidator == return
this.regexValidator.patterns == return.patterns
this.regexValidator.patterns[] == return.patterns[]
this.minLength == this.maxLength
this.minLength == orig(this.minLength)
this.minLength == orig(this.maxLength)
this.checkdigit == orig(this.checkdigit)
return == orig(this.regexValidator)
return.patterns == orig(this.regexValidator.patterns)
return.patterns[] == orig(this.regexValidator.patterns[])
this.minLength == -1
this.checkdigit has only one value
return.patterns.getClass().getName() == java.util.regex.Pattern[].class
return.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
size(return.patterns[]) one of { 1, 3, 7 }
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > size(return.patterns[])
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(return.patterns[])-1
this.regexValidator.patterns.getClass().getName() == return.patterns.getClass().getName()
this.minLength < size(return.patterns[])-1
this.checkdigit.getClass().getName() != return.patterns.getClass().getName()
this.checkdigit.getClass().getName() == orig(this.checkdigit.getClass().getName())
return.patterns.getClass().getName() == orig(this.regexValidator.patterns.getClass().getName())
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::ENTER
input != null
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::EXIT234
return == true
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::EXIT234;condition="return == true"
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::EXIT235
return == false
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::EXIT235;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::EXIT
this.regexValidator == orig(this.regexValidator)
this.regexValidator.patterns == orig(this.regexValidator.patterns)
this.regexValidator.patterns[] == orig(this.regexValidator.patterns[])
this.minLength == orig(this.minLength)
this.maxLength == orig(this.maxLength)
this.checkdigit == orig(this.checkdigit)
this.regexValidator.patterns.getClass().getName() == orig(this.regexValidator.patterns.getClass().getName())
this.checkdigit.getClass().getName() == orig(this.checkdigit.getClass().getName())
input.toString == orig(input.toString)
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
org.apache.commons.validator.routines.CodeValidator.isValid(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.validator.routines.CodeValidator.validate(java.lang.String):::ENTER
input != null
===========================================================================
org.apache.commons.validator.routines.CodeValidator.validate(java.lang.String):::EXIT264
this.minLength == this.maxLength
this.minLength == orig(this.maxLength)
this.minLength == -1
return == null
this.minLength < size(this.regexValidator.patterns[])-1
===========================================================================
org.apache.commons.validator.routines.CodeValidator.validate(java.lang.String):::EXIT271
this.regexValidator has only one value
this.regexValidator.patterns has only one value
this.regexValidator.patterns[] contains no nulls and has only one value, of length 1
this.regexValidator.patterns[] elements has only one value
this.regexValidator.patterns[].getClass().getName() == [java.util.regex.Pattern]
this.minLength == 12
this.maxLength == 19
this.checkdigit has only one value
input.toString one of { "12345678901", "12345678901234567890" }
return == null
orig(this) has only one value
size(this.regexValidator.patterns[]) == 1
===========================================================================
org.apache.commons.validator.routines.CodeValidator.validate(java.lang.String):::EXIT276
this.checkdigit has only one value
this.checkdigit != null
return == null
===========================================================================
org.apache.commons.validator.routines.CodeValidator.validate(java.lang.String):::EXIT279
return != null
===========================================================================
org.apache.commons.validator.routines.CodeValidator.validate(java.lang.String):::EXIT
this.regexValidator == orig(this.regexValidator)
this.regexValidator.patterns == orig(this.regexValidator.patterns)
this.regexValidator.patterns[] == orig(this.regexValidator.patterns[])
this.minLength == orig(this.minLength)
this.maxLength == orig(this.maxLength)
this.checkdigit == orig(this.checkdigit)
return.getClass().getName() == java.lang.String.class
this.regexValidator.patterns.getClass().getName() != return.getClass().getName()
this.regexValidator.patterns.getClass().getName() == orig(this.regexValidator.patterns.getClass().getName())
this.checkdigit.getClass().getName() != return.getClass().getName()
this.checkdigit.getClass().getName() == orig(this.checkdigit.getClass().getName())
input.toString == orig(input.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1:::CLASS
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1:::OBJECT
org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID == size(this.patterns[])
this.ccr != null
this.ccr.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[].class
this.ccr[] elements != null
this.ccr[].getClass().getName() elements == org.apache.commons.validator.routines.CreditCardValidator.CreditCardRange.class
this.ccr[].low elements != null
this.ccr[].minLen one of { [-1], [6, 8], [14, 14, 14, 14] }
this.ccr[].minLen sorted by <=
this.ccr[].maxLen one of { [-1], [7, 8], [14, 14, 14, 14] }
this.ccr[].maxLen sorted by <=
this.ccr[].lengths elements are equal
this.patterns != null
this.patterns.getClass().getName() == java.util.regex.Pattern[].class
this.patterns[] elements != null
this.patterns[].getClass().getName() == [java.util.regex.Pattern]
this.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
size(this.ccr[]) one of { 1, 2, 4 }
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen one of { -1, 6, 14 }
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen one of { -1, 7, 14 }
org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID <= size(this.ccr[])
org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen
org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen
this.ccr.getClass().getName() != this.patterns.getClass().getName()
this.ccr[].minLen <= this.ccr[].maxLen (elementwise)
this.ccr[].minLen elements > org.apache.commons.validator.routines.RegexValidator.serialVersionUID
this.ccr[].minLen elements >= this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen
this.ccr[].maxLen elements > org.apache.commons.validator.routines.RegexValidator.serialVersionUID
this.ccr[].maxLen elements >= this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen
this.ccr[].maxLen elements >= this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen
this.ccr[].lengths elements == this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].lengths
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(this.ccr[])-1
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen
this.patterns[] elements == this.patterns[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1]
size(this.ccr[]) != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen
size(this.ccr[]) != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen
size(this.ccr[])-1 >= size(this.patterns[])-1
size(this.ccr[])-1 != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen
size(this.ccr[])-1 != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen
size(this.patterns[])-1 != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen
size(this.patterns[])-1 != this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1.(java.lang.String, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[]):::ENTER
$anonymous0 has only one value
$anonymous0.toString == "(\\d+)"
$hidden$2.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[].class
$hidden$2[].minLen one of { [-1], [6, 8], [14, 14, 14, 14] }
$hidden$2[].maxLen one of { [-1], [7, 8], [14, 14, 14, 14] }
$hidden$2[].lengths elements are equal
size($hidden$2[]) one of { 1, 2, 4 }
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1.(java.lang.String, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[]):::EXIT
this.ccr[] == $hidden$2[]
this.ccr[].low == $hidden$2[].low
this.ccr[].high == $hidden$2[].high
this.ccr[].minLen == $hidden$2[].minLen
this.ccr[].maxLen == $hidden$2[].maxLen
this.ccr[].lengths == $hidden$2[].lengths
$hidden$2[] == orig($hidden$2[])
$hidden$2[].low == orig($hidden$2[].low)
$hidden$2[].high == orig($hidden$2[].high)
$hidden$2[].minLen == orig($hidden$2[].minLen)
$hidden$2[].maxLen == orig($hidden$2[].maxLen)
$hidden$2[].lengths == orig($hidden$2[].lengths)
$anonymous0.toString == "(\\d+)"
$hidden$2[].minLen one of { [-1], [6, 8], [14, 14, 14, 14] }
$hidden$2[].maxLen one of { [-1], [7, 8], [14, 14, 14, 14] }
$hidden$2[].lengths elements are equal
$hidden$2[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen one of { -1, 6, 14 }
$hidden$2[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen one of { -1, 7, 14 }
this.ccr.getClass().getName() == orig($hidden$2.getClass().getName())
$anonymous0.toString == orig($anonymous0.toString)
$hidden$2[].lengths elements == $hidden$2[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].lengths
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1.validate(java.lang.String):::ENTER
value != null
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1.validate(java.lang.String):::EXIT480
org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID == size(this.ccr[])-1
org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID == orig(size(this.ccr[]))-1
return == orig(value)
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].minLen == this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].maxLen
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].minLen == orig(this.ccr[post(org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID)].maxLen)
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].lengths == this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].lengths
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].lengths == orig(this.ccr[post(org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID)-1].lengths)
this.ccr has only one value
this.ccr[] contains no nulls and has only one value, of length 2
this.ccr[].getClass().getName() == [org.apache.commons.validator.routines.CreditCardValidator.CreditCardRange, org.apache.commons.validator.routines.CreditCardValidator.CreditCardRange]
this.ccr[].low contains no nulls and has only one value, of length 2
this.ccr[].low.toString == [1, 644]
this.ccr[].low.toString elements one of { "1", "644" }
this.ccr[].high has only one value, of length 2
this.ccr[].high.toString == [null, 65]
this.ccr[].high.toString elements one of { "65", null }
this.ccr[].minLen == [6, 8]
this.ccr[].minLen elements one of { 6, 8 }
this.ccr[].maxLen == [7, 8]
this.ccr[].maxLen elements one of { 7, 8 }
this.ccr[].lengths contains only nulls and has only one value, of length 2
this.ccr[].lengths elements == null
this.patterns has only one value
this.patterns[] contains no nulls and has only one value, of length 1
this.patterns[] elements has only one value
value.toString one of { "199000", "1990000" }
orig(this) has only one value
size(this.ccr[]) == 2
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID] has only one value
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1] has only one value
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].low has only one value
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].low has only one value
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].high has only one value
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].high == null
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].minLen == 8
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].minLen == 6
this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID-1].maxLen == 7
this.ccr[].lengths elements == this.ccr[org.apache.commons.validator.routines.CreditCardValidator$1.serialVersionUID].lengths
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1.validate(java.lang.String):::EXIT486
return == orig(value)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1.validate(java.lang.String):::EXIT491
return == null
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$1.validate(java.lang.String):::EXIT
this.ccr == orig(this.ccr)
this.ccr[] == orig(this.ccr[])
this.ccr[].low == orig(this.ccr[].low)
this.ccr[].high == orig(this.ccr[].high)
this.ccr[].minLen == orig(this.ccr[].minLen)
this.ccr[].maxLen == orig(this.ccr[].maxLen)
this.ccr[].lengths == orig(this.ccr[].lengths)
this.patterns == orig(this.patterns)
this.patterns[] == orig(this.patterns[])
this.ccr.getClass().getName() == orig(this.ccr.getClass().getName())
this.patterns.getClass().getName() == orig(this.patterns.getClass().getName())
value.toString == return.toString
value.toString == orig(value.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange:::OBJECT
this.low != null
this.minLen >= -1
this.maxLen >= -1
this.lengths[] one of { [13, 14, 16], [13, 16], [15, 17] }
this.lengths[] sorted by <
size(this.lengths[]) one of { 2, 3 }
this.low.toString <= this.high.toString
this.minLen <= this.maxLen
this.lengths[] elements > this.minLen
size(this.lengths[]) % this.minLen == 0
size(this.lengths[])-1 % this.minLen == 0
this.minLen < size(this.lengths[])-1
this.lengths[] elements > this.maxLen
size(this.lengths[]) % this.maxLen == 0
size(this.lengths[])-1 % this.maxLen == 0
this.maxLen < size(this.lengths[])-1
this.lengths[] elements > size(this.lengths[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange.CreditCardRange(java.lang.String, java.lang.String, int, int):::ENTER
low != null
low.toString <= high.toString
minLen <= maxLen
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange.CreditCardRange(java.lang.String, java.lang.String, int, int):::EXIT
this.low == orig(low)
this.high == orig(high)
this.minLen == orig(minLen)
this.maxLen == orig(maxLen)
this.lengths == null
this.low.toString == low.toString
this.high.toString == high.toString
low.toString <= high.toString
low.toString == orig(low.toString)
high.toString == orig(high.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange.CreditCardRange(java.lang.String, java.lang.String, int[]):::ENTER
low.toString one of { "", "305" }
high.toString one of { "", "4" }
lengths[] one of { [13, 14, 16], [13, 16], [15, 17] }
lengths[] sorted by <
size(lengths[]) one of { 2, 3 }
low.toString <= high.toString
lengths[] elements > size(lengths[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange.CreditCardRange(java.lang.String, java.lang.String, int[]):::EXIT
this.low == orig(low)
this.high == orig(high)
this.minLen == this.maxLen
this.lengths[] == lengths[]
lengths[] == orig(lengths[])
this.minLen == -1
low.toString one of { "", "305" }
high.toString one of { "", "4" }
lengths[] one of { [13, 14, 16], [13, 16], [15, 17] }
lengths[] sorted by <
this.low.toString == low.toString
this.high.toString == high.toString
lengths[] elements > this.minLen
this.minLen < size(lengths[])-1
low.toString <= high.toString
low.toString == orig(low.toString)
high.toString == orig(high.toString)
lengths[] elements > size(this.lengths[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator:::CLASS
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA == size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.VISA == size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR has only one value
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR != null
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR has only one value
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR != null
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator has only one value
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator != null
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns has only one value
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns != null
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] contains no nulls and has only one value, of length 1
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] elements has only one value
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] elements != null
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[].getClass().getName() == [java.util.regex.Pattern]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == -1
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR has only one value
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR != null
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator has only one value
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator != null
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns has only one value
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns != null
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] contains no nulls and has only one value, of length 1
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] elements has only one value
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] elements != null
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX has only one value
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX != null
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns has only one value
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns != null
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == java.util.regex.Pattern[].class
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] contains no nulls and has only one value, of length 3
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] elements != null
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[].getClass().getName() == [java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR has only one value
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] contains no nulls and has only one value, of length 7
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] elements != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[].getClass().getName() == [java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns != null
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] contains no nulls and has only one value, of length 1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] elements has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] elements != null
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR has only one value
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR != null
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator has only one value
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator != null
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns has only one value
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns != null
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] contains no nulls and has only one value, of length 1
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] elements has only one value
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] elements != null
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR has only one value
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR != null
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator has only one value
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator != null
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns has only one value
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns != null
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] contains no nulls and has only one value, of length 1
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] elements has only one value
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] elements != null
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) == 3
size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[]) == 7
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] has only one value
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] has only one value
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.VISA] has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.VISA] has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD] has only one value
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1] has only one value
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() != org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] elements == org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] elements == org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] elements == org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] elements == org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] elements == org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator:::OBJECT
this.cardTypes != null
this.cardTypes[] elements != null
this.cardTypes[].getClass().getName() elements == org.apache.commons.validator.routines.CodeValidator.class
this.cardTypes.getClass().getName() == java.util.ArrayList.class
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.NONE <= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD >= size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.DINERS > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > size(this.cardTypes[])
this.cardTypes.getClass().getName() != org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName()
this.cardTypes.getClass().getName() != org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName()
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > size(this.cardTypes[])
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength <= size(this.cardTypes[])-1
size(this.cardTypes[]) < size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator():::EXIT
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD == size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(this.cardTypes[])-1 == size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
this.cardTypes has only one value
this.cardTypes[] contains no nulls and has only one value, of length 4
this.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX] has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA] has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1] has only one value
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR in this.cardTypes[]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(long):::ENTER
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(long):::EXIT
size(this.cardTypes[]) one of { 0, 1, 4 }
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > orig(options)
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != orig(options)
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH != orig(options)
org.apache.commons.validator.routines.CreditCardValidator.NONE <= orig(options)
org.apache.commons.validator.routines.CreditCardValidator.AMEX != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD >= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY >= orig(options)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > orig(options)
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > orig(options)
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < orig(options)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < orig(options)
orig(options) >= size(this.cardTypes[])
orig(options) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
orig(options) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
orig(options) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
size(this.cardTypes[]) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
size(this.cardTypes[])-1 <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(org.apache.commons.validator.routines.CodeValidator[]):::ENTER
creditCardValidators.getClass().getName() == org.apache.commons.validator.routines.CodeValidator[].class
creditCardValidators[].regexValidator.patterns.getClass().getName() elements == java.util.regex.Pattern[].class
creditCardValidators[].regexValidator.patterns.getClass().getName() one of { [java.util.regex.Pattern[]], [java.util.regex.Pattern[], java.util.regex.Pattern[]] }
creditCardValidators[].minLength elements one of { -1, 12 }
creditCardValidators[].minLength one of { [-1, -1], [12] }
creditCardValidators[].minLength elements are equal
creditCardValidators[].maxLength elements one of { -1, 19 }
creditCardValidators[].maxLength one of { [-1, -1], [19] }
creditCardValidators[].maxLength elements are equal
creditCardValidators[].checkdigit elements has only one value
creditCardValidators[].checkdigit.getClass().getName() elements == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
creditCardValidators[].checkdigit.getClass().getName() one of { [org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit], [org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit] }
size(creditCardValidators[]) one of { 1, 2 }
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(org.apache.commons.validator.routines.CodeValidator[]):::EXIT
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].checkdigit)
creditCardValidators[] == orig(creditCardValidators[])
creditCardValidators[].regexValidator == orig(creditCardValidators[].regexValidator)
creditCardValidators[].regexValidator.patterns == orig(creditCardValidators[].regexValidator.patterns)
creditCardValidators[].minLength == orig(creditCardValidators[].minLength)
creditCardValidators[].maxLength == orig(creditCardValidators[].maxLength)
creditCardValidators[].checkdigit == orig(creditCardValidators[].checkdigit)
size(this.cardTypes[]) == orig(size(creditCardValidators[]))
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE] == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].regexValidator == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].regexValidator
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].regexValidator == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].regexValidator)
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].regexValidator.patterns == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].regexValidator.patterns
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].regexValidator.patterns == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].regexValidator.patterns)
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].minLength
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].minLength)
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].maxLength
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].maxLength)
this.cardTypes[].getClass().getName() one of { [org.apache.commons.validator.routines.CodeValidator], [org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator] }
creditCardValidators[].regexValidator.patterns.getClass().getName() elements == java.util.regex.Pattern[].class
creditCardValidators[].regexValidator.patterns.getClass().getName() one of { [java.util.regex.Pattern[]], [java.util.regex.Pattern[], java.util.regex.Pattern[]] }
creditCardValidators[].minLength elements one of { -1, 12 }
creditCardValidators[].minLength one of { [-1, -1], [12] }
creditCardValidators[].minLength elements are equal
creditCardValidators[].maxLength elements one of { -1, 19 }
creditCardValidators[].maxLength one of { [-1, -1], [19] }
creditCardValidators[].maxLength elements are equal
creditCardValidators[].checkdigit elements has only one value
creditCardValidators[].checkdigit.getClass().getName() elements == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
creditCardValidators[].checkdigit.getClass().getName() one of { [org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit], [org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit] }
size(this.cardTypes[]) one of { 1, 2 }
creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE] in this.cardTypes[]
creditCardValidators[].checkdigit elements == org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() in creditCardValidators[].checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() in creditCardValidators[].regexValidator.patterns.getClass().getName()
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] in creditCardValidators[]
creditCardValidators[].minLength elements == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLength
creditCardValidators[].maxLength elements == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLength
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(org.apache.commons.validator.routines.CodeValidator[], org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[]):::ENTER
creditCardValidators[].minLength == creditCardValidators[].maxLength
creditCardRanges[].minLen == creditCardRanges[].maxLen
size(creditCardValidators[]) == size(creditCardRanges[])
creditCardValidators has only one value
creditCardValidators.getClass().getName() == org.apache.commons.validator.routines.CodeValidator[].class
creditCardValidators[] contains no nulls and has only one value, of length 4
creditCardValidators[].regexValidator contains no nulls and has only one value, of length 4
creditCardValidators[].regexValidator.patterns contains no nulls and has only one value, of length 4
creditCardValidators[].regexValidator.patterns.getClass().getName() == [java.util.regex.Pattern[], java.util.regex.Pattern[], java.util.regex.Pattern[], java.util.regex.Pattern[]]
creditCardValidators[].regexValidator.patterns.getClass().getName() elements == java.util.regex.Pattern[].class
creditCardValidators[].minLength == [-1, -1, -1, -1]
creditCardValidators[].minLength elements == -1
creditCardValidators[].checkdigit contains no nulls and has only one value, of length 4
creditCardValidators[].checkdigit elements has only one value
creditCardValidators[].checkdigit.getClass().getName() == [org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit]
creditCardValidators[].checkdigit.getClass().getName() elements == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
creditCardRanges has only one value
creditCardRanges.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[].class
creditCardRanges[] contains no nulls and has only one value, of length 4
creditCardRanges[].low contains no nulls and has only one value, of length 4
creditCardRanges[].low.toString == [300, 3095, 36, 38]
creditCardRanges[].high has only one value, of length 4
creditCardRanges[].high.toString == [305, null, null, 39]
creditCardRanges[].high.toString elements one of { "305", "39", null }
creditCardRanges[].minLen == [14, 14, 14, 14]
creditCardRanges[].minLen elements == 14
creditCardRanges[].lengths contains only nulls and has only one value, of length 4
creditCardRanges[].lengths elements == null
size(creditCardValidators[]) == 4
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(org.apache.commons.validator.routines.CodeValidator[], org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[]):::EXIT
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD == size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD == orig(size(creditCardValidators[]))
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD == orig(size(creditCardRanges[]))
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)].checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA-1].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)].checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1].checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].checkdigit
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1].checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].regexValidator
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].regexValidator
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX].minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX].maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)].minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)].maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA].minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA-1].minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA].maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA-1].maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)].minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1].minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)].maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1].maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1].minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1].maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].regexValidator
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1].regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1].regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA].regexValidator
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)].regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA].regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)].regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX].regexValidator
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)].regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA-1].regexValidator
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1].regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.AMEX].regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)].regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == creditCardValidators[org.apache.commons.validator.routines.CreditCardValidator.VISA-1].regexValidator.patterns
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(creditCardValidators[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1].regexValidator.patterns)
creditCardValidators[] == orig(creditCardValidators[])
creditCardValidators[].regexValidator == orig(creditCardValidators[].regexValidator)
creditCardValidators[].regexValidator.patterns == orig(creditCardValidators[].regexValidator.patterns)
creditCardValidators[].minLength == creditCardValidators[].maxLength
creditCardValidators[].minLength == orig(creditCardValidators[].minLength)
creditCardValidators[].minLength == orig(creditCardValidators[].maxLength)
creditCardValidators[].checkdigit == orig(creditCardValidators[].checkdigit)
creditCardRanges[] == orig(creditCardRanges[])
creditCardRanges[].low == orig(creditCardRanges[].low)
creditCardRanges[].high == orig(creditCardRanges[].high)
creditCardRanges[].minLen == creditCardRanges[].maxLen
creditCardRanges[].minLen == orig(creditCardRanges[].minLen)
creditCardRanges[].minLen == orig(creditCardRanges[].maxLen)
creditCardRanges[].lengths == orig(creditCardRanges[].lengths)
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) == size(creditCardValidators[])-1
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) == size(creditCardRanges[])-1
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) == orig(size(creditCardValidators[]))-1
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) == orig(size(creditCardRanges[]))-1
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX].minLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].minLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX].maxLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].maxLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)].minLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].minLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)].maxLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].maxLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.VISA].minLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.VISA-1].minLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.VISA].maxLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.VISA-1].maxLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)].minLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1].minLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)].maxLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1].maxLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].minLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].maxLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1].minLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD)-1].maxLen)
this.cardTypes has only one value
this.cardTypes[] contains no nulls and has only one value, of length 5
this.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator]
creditCardValidators[] contains no nulls and has only one value, of length 4
creditCardValidators[].regexValidator contains no nulls and has only one value, of length 4
creditCardValidators[].regexValidator.patterns contains no nulls and has only one value, of length 4
creditCardValidators[].regexValidator.patterns.getClass().getName() == [java.util.regex.Pattern[], java.util.regex.Pattern[], java.util.regex.Pattern[], java.util.regex.Pattern[]]
creditCardValidators[].regexValidator.patterns.getClass().getName() elements == java.util.regex.Pattern[].class
creditCardValidators[].minLength == [-1, -1, -1, -1]
creditCardValidators[].minLength elements == -1
creditCardValidators[].checkdigit contains no nulls and has only one value, of length 4
creditCardValidators[].checkdigit elements has only one value
creditCardValidators[].checkdigit.getClass().getName() == [org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit, org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit]
creditCardValidators[].checkdigit.getClass().getName() elements == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
creditCardRanges[] contains no nulls and has only one value, of length 4
creditCardRanges[].low contains no nulls and has only one value, of length 4
creditCardRanges[].low.toString == [300, 3095, 36, 38]
creditCardRanges[].high has only one value, of length 4
creditCardRanges[].high.toString == [305, null, null, 39]
creditCardRanges[].high.toString elements one of { "305", "39", null }
creditCardRanges[].minLen == [14, 14, 14, 14]
creditCardRanges[].minLen elements == 14
creditCardRanges[].lengths contains only nulls and has only one value, of length 4
creditCardRanges[].lengths elements == null
size(this.cardTypes[]) == 5
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].low has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].high has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX].low has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX].high == null
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.VISA] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.VISA].low has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD] has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1] has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].low has only one value
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1].high has only one value
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR in this.cardTypes[]
creditCardValidators[].checkdigit elements == org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() in creditCardValidators[].checkdigit.getClass().getName()
creditCardValidators[].minLength elements == org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() in creditCardValidators[].regexValidator.patterns.getClass().getName()
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] in creditCardValidators[]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX] in creditCardValidators[]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA] in creditCardValidators[]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1] in creditCardValidators[]
creditCardRanges[].minLen elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen
creditCardRanges[].lengths elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[]):::ENTER
creditCardRanges[].minLen == creditCardRanges[].maxLen
creditCardRanges.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[].class
creditCardRanges[].low contains no nulls and has only one value, of length 1
creditCardRanges[].low elements has only one value
creditCardRanges[].low.toString == [305]
creditCardRanges[].low.toString elements == "305"
creditCardRanges[].high contains no nulls and has only one value, of length 1
creditCardRanges[].high elements has only one value
creditCardRanges[].high.toString == [4]
creditCardRanges[].high.toString elements == "4"
creditCardRanges[].minLen == [-1]
creditCardRanges[].minLen elements == -1
size(creditCardRanges[]) == 1
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.CreditCardValidator(org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[]):::EXIT
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(creditCardRanges[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == orig(size(creditCardRanges[]))-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX == orig(size(creditCardRanges[]))
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].minLen)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.NONE)].maxLen)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].minLen)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].maxLen)
creditCardRanges[] == orig(creditCardRanges[])
creditCardRanges[].low == orig(creditCardRanges[].low)
creditCardRanges[].high == orig(creditCardRanges[].high)
creditCardRanges[].minLen == creditCardRanges[].maxLen
creditCardRanges[].minLen == orig(creditCardRanges[].minLen)
creditCardRanges[].minLen == orig(creditCardRanges[].maxLen)
creditCardRanges[].lengths == orig(creditCardRanges[].lengths)
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE] == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].low == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].low
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].low == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].low)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].high == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].high
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].high == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].high)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].lengths
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].lengths)
this.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator]
creditCardRanges[].low contains no nulls and has only one value, of length 1
creditCardRanges[].low elements has only one value
creditCardRanges[].low.toString == [305]
creditCardRanges[].low.toString elements == "305"
creditCardRanges[].high contains no nulls and has only one value, of length 1
creditCardRanges[].high elements has only one value
creditCardRanges[].high.toString == [4]
creditCardRanges[].high.toString elements == "4"
creditCardRanges[].minLen == [-1]
creditCardRanges[].minLen elements == -1
this.cardTypes[] elements == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
creditCardRanges[].minLen elements == org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength
creditCardRanges[] elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE]
creditCardRanges[].low elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].low
creditCardRanges[].high elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].high
creditCardRanges[].lengths elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.createRangeValidator(org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[], org.apache.commons.validator.routines.checkdigit.CheckDigit):::ENTER
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE] == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].low == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].low
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].high == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].high
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].minLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].maxLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].lengths
creditCardRanges.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[].class
creditCardRanges[].minLen one of { [-1], [6, 8], [14, 14, 14, 14] }
creditCardRanges[].maxLen one of { [-1], [7, 8], [14, 14, 14, 14] }
creditCardRanges[].lengths elements are equal
digitCheck.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
size(creditCardRanges[]) one of { 1, 2, 4 }
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen one of { -1, 6, 14 }
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLen one of { -1, 7, 14 }
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == digitCheck.getClass().getName()
creditCardRanges[].lengths elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.createRangeValidator(org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange[], org.apache.commons.validator.routines.checkdigit.CheckDigit):::EXIT
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(return.regexValidator.patterns[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(return.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == return.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == return.maxLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
creditCardRanges[] == orig(creditCardRanges[])
creditCardRanges[].low == orig(creditCardRanges[].low)
creditCardRanges[].high == orig(creditCardRanges[].high)
creditCardRanges[].minLen == orig(creditCardRanges[].minLen)
creditCardRanges[].maxLen == orig(creditCardRanges[].maxLen)
creditCardRanges[].lengths == orig(creditCardRanges[].lengths)
return.checkdigit == orig(digitCheck)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE] == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].low == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].low
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].low == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].low)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].high == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].high
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].high == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].high)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].minLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].minLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLen == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].maxLen
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLen == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].maxLen)
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1].lengths
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths == orig(creditCardRanges[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1].lengths)
return.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == return.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
creditCardRanges[].minLen one of { [-1], [6, 8], [14, 14, 14, 14] }
creditCardRanges[].maxLen one of { [-1], [7, 8], [14, 14, 14, 14] }
creditCardRanges[].lengths elements are equal
return.checkdigit.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].minLen one of { -1, 6, 14 }
creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].maxLen one of { -1, 7, 14 }
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == return.checkdigit.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == return.regexValidator.patterns.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName())
creditCardRanges[].lengths elements == creditCardRanges[org.apache.commons.validator.routines.CreditCardValidator.NONE].lengths
return.regexValidator.patterns[] elements == return.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE]
return.checkdigit.getClass().getName() == orig(digitCheck.getClass().getName())
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.genericCreditCardValidator():::ENTER
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.genericCreditCardValidator():::EXIT
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(return.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(return.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
return has only one value
return.cardTypes has only one value
return.cardTypes[] contains no nulls and has only one value, of length 1
return.cardTypes[] elements has only one value
return.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator]
return.cardTypes[].getClass().getName() elements == org.apache.commons.validator.routines.CodeValidator.class
return.cardTypes.getClass().getName() == java.util.ArrayList.class
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName())
return.cardTypes[] elements == return.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.genericCreditCardValidator(int, int):::ENTER
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH == minLen
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH == maxLen
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.genericCreditCardValidator(int, int):::EXIT
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(return.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(return.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
return has only one value
return.cardTypes has only one value
return.cardTypes[] contains no nulls and has only one value, of length 1
return.cardTypes[] elements has only one value
return.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator]
return.cardTypes[].getClass().getName() elements == org.apache.commons.validator.routines.CodeValidator.class
return.cardTypes.getClass().getName() == java.util.ArrayList.class
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName())
return.cardTypes[] elements == return.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::ENTER
options >= 0
flag >= 1
flag is a power of 2
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > options
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > flag
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != options
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != flag
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH != options
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH != flag
org.apache.commons.validator.routines.CreditCardValidator.NONE <= options
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= flag
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD >= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY >= options
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > options
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 % flag == 0
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 >= flag
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > options
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > flag
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < options
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < flag
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < options
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < flag
options >= size(this.cardTypes[])
options != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
options != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
options != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
flag >= size(this.cardTypes[])
flag != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
flag != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
flag != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
size(this.cardTypes[])-1 <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::EXIT514
return == true
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= orig(options)
org.apache.commons.validator.routines.CreditCardValidator.VISA >= size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY % orig(flag) == 0
org.apache.commons.validator.routines.CreditCardValidator.VPAY >= orig(flag)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > orig(flag)
orig(options) >= orig(flag)
orig(options) > size(this.cardTypes[])
size(this.cardTypes[]) <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::EXIT514;condition="return == true"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::EXIT515
return == false
org.apache.commons.validator.routines.CreditCardValidator.AMEX != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])
orig(options) != orig(flag)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::EXIT515;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::EXIT
this.cardTypes == orig(this.cardTypes)
this.cardTypes[] == orig(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
(return == false)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.AMEX != size(this.cardTypes[])-1)
(return == false)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[]))
(return == false)  ==>  (orig(options) != orig(flag))
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.AMEX <= orig(options))
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD > size(this.cardTypes[]))
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > orig(flag))
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.VISA >= size(this.cardTypes[])-1)
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.VPAY % orig(flag) == 0)
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.VPAY >= orig(flag))
(return == true)  ==>  (orig(options) > size(this.cardTypes[]))
(return == true)  ==>  (orig(options) >= orig(flag))
(return == true)  ==>  (size(this.cardTypes[]) <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]))
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD >= size(this.cardTypes[])
this.cardTypes.getClass().getName() == orig(this.cardTypes.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < orig(options)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < orig(flag)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName())
orig(options) >= size(this.cardTypes[])
orig(options) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
orig(options) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
orig(options) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
orig(flag) >= size(this.cardTypes[])
orig(flag) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
orig(flag) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
orig(flag) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
size(this.cardTypes[])-1 <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::EXIT;condition="return == true"
return == true
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= orig(options)
org.apache.commons.validator.routines.CreditCardValidator.VISA >= size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD > size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY % orig(flag) == 0
org.apache.commons.validator.routines.CreditCardValidator.VPAY >= orig(flag)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > orig(flag)
orig(options) >= orig(flag)
orig(options) > size(this.cardTypes[])
size(this.cardTypes[]) <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isOn(long, long):::EXIT;condition="not(return == true)"
return == false
org.apache.commons.validator.routines.CreditCardValidator.AMEX != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])
orig(options) != orig(flag)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::ENTER
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])-1
size(this.cardTypes[]) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT420
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(this.cardTypes[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
card.toString == ""
return == false
size(this.cardTypes[]) one of { 1, 4, 5 }
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT420;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT424
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(this.cardTypes[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
return == true
orig(card) != null
org.apache.commons.validator.routines.CreditCardValidator.NONE <= size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < size(this.cardTypes[])-1
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT424;condition="return == true"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT427
return == false
orig(card) != null
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT427;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT
this.cardTypes == orig(this.cardTypes)
this.cardTypes[] == orig(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.AMEX <= size(this.cardTypes[]))
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < size(this.cardTypes[])-1)
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.NONE <= size(this.cardTypes[])-1)
(return == true)  ==>  (orig(card) != null)
(return == true)  ==>  (this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(this.cardTypes[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1]))
(return == true)  ==>  (this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1])
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])-1
this.cardTypes.getClass().getName() == orig(this.cardTypes.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName())
card.toString == orig(card.toString)
size(this.cardTypes[]) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT;condition="return == true"
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(this.cardTypes[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
return == true
orig(card) != null
org.apache.commons.validator.routines.CreditCardValidator.NONE <= size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < size(this.cardTypes[])-1
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.isValid(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::ENTER
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] == range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == range.lengths[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
range != null
range.low != null
range.minLen != 0
range.lengths[] one of { [13, 14, 16], [13, 16], [15, 17] }
range.lengths[] sorted by <
size(range.lengths[]) one of { 2, 3 }
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] one of { 13, 15 }
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] one of { 14, 16, 17 }
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > valueLength
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != valueLength
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH != valueLength
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.NONE != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.NONE != range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX < valueLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX != range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.AMEX
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.VISA != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.VISA != range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.VISA <= size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.VISA >= size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < valueLength
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD != range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.DISCOVER
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.DINERS > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.DINERS != range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.DINERS > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.DINERS > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.VPAY > valueLength
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.VPAY
org.apache.commons.validator.routines.CreditCardValidator.VPAY > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > valueLength
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > valueLength
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.minLen
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CodeValidator.serialVersionUID
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > size(range.lengths[])
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < valueLength
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.minLen
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.RegexValidator.serialVersionUID
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(range.lengths[])-1
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < valueLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength <= range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength <= range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
valueLength > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
valueLength >= size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
valueLength > size(range.lengths[])
valueLength % size(range.lengths[])-1 == 0
range.low.toString <= range.high.toString
range.minLen <= range.maxLen
range.lengths[] elements > range.minLen
range.minLen != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.minLen != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
size(range.lengths[]) % range.minLen == 0
range.minLen < size(range.lengths[])-1
size(range.lengths[])-1 % range.minLen == 0
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] % range.minLen == 0
range.minLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] % range.minLen == 0
range.minLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[] elements > range.maxLen
range.maxLen != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.maxLen != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
size(range.lengths[]) % range.maxLen == 0
range.maxLen < size(range.lengths[])-1
size(range.lengths[])-1 % range.maxLen == 0
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] % range.maxLen == 0
range.maxLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] % range.maxLen == 0
range.maxLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[] elements > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.lengths[] elements > size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
range.lengths[] elements > size(range.lengths[])
range.lengths[] elements >= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) >= size(range.lengths[])
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1 > size(range.lengths[])
size(range.lengths[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(range.lengths[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] % size(range.lengths[])-1 == 0
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT456
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(range.minLen)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(range.maxLen)
range.low.toString one of { "", "305" }
range.high.toString one of { "", "4" }
return == true
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH < orig(valueLength)
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > orig(valueLength)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER < orig(valueLength)
orig(valueLength) in range.lengths[]
orig(valueLength) > size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
orig(valueLength) >= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
orig(valueLength) <= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT456;condition="return == true"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT459
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == orig(size(range.lengths[]))-1
org.apache.commons.validator.routines.CreditCardValidator.VISA == size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.VISA == orig(size(range.lengths[]))
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(range.minLen)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(range.maxLen)
range.low.toString one of { "", "305" }
range.high.toString one of { "", "4" }
range.lengths[] one of { [13, 16], [15, 17] }
return == false
orig(valueLength) one of { 14, 16, 18 }
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] one of { 16, 17 }
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT459;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT461
range.high.toString one of { "", "305", "65" }
range.lengths == null
return == true
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > orig(valueLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.maxLen
range.minLen <= orig(valueLength)
range.minLen > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.minLen >= size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
range.maxLen >= orig(valueLength)
range.maxLen > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.maxLen >= size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT461;condition="return == true"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT462
range.lengths == null
return == false
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.maxLen
range.minLen != orig(valueLength)
range.minLen > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.minLen >= size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
range.maxLen != orig(valueLength)
range.maxLen > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.maxLen >= size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
orig(valueLength) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT462;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
range.low == orig(range.low)
range.high == orig(range.high)
range.minLen == orig(range.minLen)
range.maxLen == orig(range.maxLen)
range.lengths == orig(range.lengths)
range.lengths[] == orig(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] == range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(range.lengths[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == range.lengths[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(range.lengths[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
(return == false)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(range.lengths[])-1)
(return == false)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.VISA == size(range.lengths[]))
(return == false)  ==>  (orig(valueLength) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[]))
(return == false)  ==>  (range.lengths[] one of { [13, 16], [15, 17] })
(return == false)  ==>  (range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] one of { 16, 17 })
(return == false)  ==>  (range.maxLen != orig(valueLength))
(return == false)  ==>  (range.minLen != orig(valueLength))
(return == false)  ==>  (size(range.lengths[]) == 2)
(return == true)  ==>  (org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > orig(valueLength))
(return == true)  ==>  (orig(valueLength) <= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX])
(return == true)  ==>  (orig(valueLength) >= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE])
(return == true)  ==>  (orig(valueLength) in range.lengths[])
(return == true)  ==>  (range.lengths[] one of { [13, 14, 16], [13, 16], [15, 17] })
(return == true)  ==>  (range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] one of { 14, 16, 17 })
(return == true)  ==>  (range.minLen <= orig(valueLength))
(return == true)  ==>  (size(range.lengths[]) one of { 2, 3 })
range.low != null
range.minLen != 0
range.lengths[] one of { [13, 14, 16], [13, 16], [15, 17] }
range.lengths[] sorted by <
size(range.lengths[]) one of { 2, 3 }
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] one of { 13, 15 }
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] one of { 14, 16, 17 }
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH != range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MIN_CC_LENGTH < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.NONE != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.NONE != range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX != range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.AMEX
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.AMEX < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.VISA != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.VISA != range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.VISA <= size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.VISA >= size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD != range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD != range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.DISCOVER
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.DINERS > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.DINERS != range.maxLen
org.apache.commons.validator.routines.CreditCardValidator.DINERS > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.DINERS > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.VPAY
org.apache.commons.validator.routines.CreditCardValidator.VPAY > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.VPAY > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.minLen
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > size(range.lengths[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_PRE_OCT2016 > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.minLen
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.maxLen
range.lengths[] elements < org.apache.commons.validator.routines.CodeValidator.serialVersionUID
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > size(range.lengths[])
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CodeValidator.serialVersionUID > range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.minLen
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.RegexValidator.serialVersionUID
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(range.lengths[])-1
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength <= range.minLen
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength <= range.maxLen
range.lengths[] elements > org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < orig(valueLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName())
range.low.toString <= range.high.toString
range.low.toString == orig(range.low.toString)
range.high.toString == orig(range.high.toString)
range.minLen <= range.maxLen
range.lengths[] elements > range.minLen
range.minLen != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.minLen != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
size(range.lengths[]) % range.minLen == 0
range.minLen < size(range.lengths[])-1
size(range.lengths[])-1 % range.minLen == 0
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] % range.minLen == 0
range.minLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] % range.minLen == 0
range.minLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[] elements > range.maxLen
range.maxLen != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.maxLen != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
size(range.lengths[]) % range.maxLen == 0
range.maxLen < size(range.lengths[])-1
size(range.lengths[])-1 % range.maxLen == 0
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] % range.maxLen == 0
range.maxLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] % range.maxLen == 0
range.maxLen < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[] elements > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
range.lengths[] elements > size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
range.lengths[] elements > size(range.lengths[])
range.lengths[] elements >= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
orig(valueLength) > size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
orig(valueLength) >= size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1
orig(valueLength) > size(range.lengths[])
orig(valueLength) % size(range.lengths[])-1 == 0
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) >= size(range.lengths[])
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])-1 > size(range.lengths[])
size(range.lengths[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
size(range.lengths[]) < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] % size(range.lengths[])-1 == 0
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE] < range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT;condition="return == true"
return == true
org.apache.commons.validator.routines.CreditCardValidator.MAX_CC_LENGTH > orig(valueLength)
range.minLen <= orig(valueLength)
orig(valueLength) in range.lengths[]
orig(valueLength) >= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.NONE]
orig(valueLength) <= range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validLength(int, org.apache.commons.validator.routines.CreditCardValidator$CreditCardRange):::EXIT;condition="not(return == true)"
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(range.lengths[])-1
org.apache.commons.validator.routines.CreditCardValidator.VISA == size(range.lengths[])
range.lengths[] one of { [13, 16], [15, 17] }
return == false
size(range.lengths[]) == 2
range.lengths[org.apache.commons.validator.routines.CreditCardValidator.AMEX] one of { 16, 17 }
range.minLen != orig(valueLength)
range.maxLen != orig(valueLength)
orig(valueLength) != size(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validate(java.lang.String):::ENTER
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
this.cardTypes[].getClass().getName() one of { [org.apache.commons.validator.routines.CodeValidator], [org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator] }
size(this.cardTypes[]) one of { 1, 4 }
org.apache.commons.validator.routines.CreditCardValidator.NONE <= size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD >= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < size(this.cardTypes[])-1
size(this.cardTypes[]) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
size(this.cardTypes[])-1 <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validate(java.lang.String):::EXIT438
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD == size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD == orig(size(this.cardTypes[]))
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
return == orig(card)
size(this.cardTypes[])-1 == size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[]) == orig(size(this.cardTypes[]))-1
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA-1]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(this.cardTypes[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
this.cardTypes has only one value
this.cardTypes[] contains no nulls and has only one value, of length 4
this.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator]
return == null
orig(this) has only one value
orig(card) == null
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX] has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.VISA] has only one value
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD-1] has only one value
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR in this.cardTypes[]
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR in this.cardTypes[]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validate(java.lang.String):::EXIT444
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == orig(size(this.cardTypes[]))-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX == orig(size(this.cardTypes[]))
this.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator]
this.cardTypes[] elements == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validate(java.lang.String):::EXIT447
org.apache.commons.validator.routines.CreditCardValidator.NONE == size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.NONE == orig(size(this.cardTypes[]))-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX == size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX == orig(size(this.cardTypes[]))
this.cardTypes[].getClass().getName() == [org.apache.commons.validator.routines.CodeValidator]
return == null
this.cardTypes[] elements == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE]
===========================================================================
org.apache.commons.validator.routines.CreditCardValidator.validate(java.lang.String):::EXIT
this.cardTypes == orig(this.cardTypes)
this.cardTypes[] == orig(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.minLength)
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.maxLength)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016 == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns)
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[])
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.AMEX-1]
this.cardTypes[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(this.cardTypes[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[org.apache.commons.validator.routines.CreditCardValidator.NONE] == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.AMEX)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns[org.apache.commons.validator.routines.CreditCardValidator.AMEX] == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns[post(org.apache.commons.validator.routines.CreditCardValidator.VISA)-1])
this.cardTypes[].getClass().getName() one of { [org.apache.commons.validator.routines.CodeValidator], [org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator, org.apache.commons.validator.routines.CodeValidator] }
return.getClass().getName() == java.lang.String.class
size(this.cardTypes[]) one of { 1, 4 }
org.apache.commons.validator.routines.CreditCardValidator.NONE <= size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.AMEX <= size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.AMEX != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])
org.apache.commons.validator.routines.CreditCardValidator.VISA != size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD >= size(this.cardTypes[])
this.cardTypes.getClass().getName() != return.getClass().getName()
this.cardTypes.getClass().getName() == orig(this.cardTypes.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() != return.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.LUHN_VALIDATOR.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.checkdigit.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.minLength < size(this.cardTypes[])-1
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() != return.getClass().getName()
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.AMEX_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DINERS_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_REGEX.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.MASTERCARD_VALIDATOR_PRE_OCT2016.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VISA_VALIDATOR.regexValidator.patterns.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidator.VPAY_VALIDATOR.regexValidator.patterns.getClass().getName())
card.toString == orig(card.toString)
size(this.cardTypes[]) != size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
size(this.cardTypes[])-1 <= size(org.apache.commons.validator.routines.CreditCardValidator.DISCOVER_REGEX.patterns[])
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest:::CLASS
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == "4417123456789113"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == "4417123456789112"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == "4222222222222"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == "4222222222229"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == "378282246310005"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == "378282246310001"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == "5105105105105100"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == "5105105105105105"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == "6011000990139424"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == "6011000990139421"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == "6534567890123458"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == "6534567890123450"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == "30569309025904"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == "30569309025901"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == "4370000000000061"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == "4370000000000012"
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == "4370000000000069"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == java.lang.String[].class
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] contains no nulls and has only one value, of length 9
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] elements != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].getClass().getName() elements == java.lang.String.class
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString == [4417123456789113, 4222222222222, 378282246310005, 5105105105105100, 6011000990139424, 6534567890123458, 30569309025904, 4370000000000061, 4370000000000012]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS has only one value
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] contains no nulls and has only one value, of length 12
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] elements != null
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].getClass().getName() elements == java.lang.String.class
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString == [4417123456789112, 4222222222229, 378282246310001, 5105105105105105, 6011000990139421, 6534567890123450, 30569309025901, 4370000000000069, , 12345678901, 12345678901234567890, 4417123456789112]
size(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]) == 9
size(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]) == 12
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString > org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString < org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[]
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString in org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[].toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName()
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest:::OBJECT
this.fName != null
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString < this.fName.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString < this.fName.toString
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.CreditCardValidatorTest(java.lang.String):::ENTER
name != null
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.CreditCardValidatorTest(java.lang.String):::EXIT
this.fName == orig(name)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString < name.toString
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString < name.toString
this.fName.toString == name.toString
name.toString == orig(name.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testAddAllowedCardType():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testAddAllowedCardType"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testAddAllowedCardType():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testAddAllowedCardType"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testAmexOption():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testAmexOption"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testAmexOption():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testAmexOption"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testAmexValidator():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testAmexValidator"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testAmexValidator():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testAmexValidator"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testArrayConstructor():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testArrayConstructor"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testArrayConstructor():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testArrayConstructor"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDinersOption():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testDinersOption"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDinersOption():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testDinersOption"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDinersValidator():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testDinersValidator"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDinersValidator():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testDinersValidator"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDiscoverOption():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testDiscoverOption"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDiscoverOption():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testDiscoverOption"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDiscoverValidator():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testDiscoverValidator"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDiscoverValidator():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testDiscoverValidator"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDisjointRange():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testDisjointRange"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testDisjointRange():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testDisjointRange"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testGeneric():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testGeneric"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testGeneric():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testGeneric"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testIsValid():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testIsValid"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testIsValid():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testIsValid"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testMastercardOption():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testMastercardOption"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testMastercardOption():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testMastercardOption"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testMastercardUsingSeparators():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testMastercardUsingSeparators"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testMastercardUsingSeparators():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testMastercardUsingSeparators"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testMastercardValidator():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testMastercardValidator"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testMastercardValidator():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testMastercardValidator"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testRangeGenerator():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testRangeGenerator"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testRangeGenerator():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testRangeGenerator"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testRangeGeneratorNoLuhn():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testRangeGeneratorNoLuhn"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testRangeGeneratorNoLuhn():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testRangeGeneratorNoLuhn"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testVPayOption():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testVPayOption"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testVPayOption():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testVPayOption"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testValidLength():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testValidLength"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testValidLength():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testValidLength"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testVisaOption():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testVisaOption"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testVisaOption():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testVisaOption"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testVisaValidator():::ENTER
this has only one value
this.fName has only one value
this.fName.toString == "testVisaValidator"
===========================================================================
org.apache.commons.validator.routines.CreditCardValidatorTest.testVisaValidator():::EXIT
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2 == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS[])
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[] == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS[])
this.fName == orig(this.fName)
this.fName has only one value
this.fName.toString == "testVisaValidator"
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_SHORT_VISA.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_AMEX.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_MASTERCARD.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DISCOVER65.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_DINERS.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_VPAY2.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_VPAY.toString)
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName())
org.apache.commons.validator.routines.CreditCardValidatorTest.VALID_CARDS.getClass().getName() == orig(org.apache.commons.validator.routines.CreditCardValidatorTest.ERROR_CARDS.getClass().getName())
this.fName.toString == orig(this.fName.toString)
===========================================================================
org.apache.commons.validator.routines.RegexValidator:::CLASS
===========================================================================
org.apache.commons.validator.routines.RegexValidator:::OBJECT
this.patterns != null
this.patterns.getClass().getName() == java.util.regex.Pattern[].class
this.patterns[] elements != null
this.patterns[].getClass().getName() elements == java.util.regex.Pattern.class
size(this.patterns[]) one of { 1, 3, 7 }
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(this.patterns[])-1
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String):::ENTER
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String):::EXIT
this.patterns[].getClass().getName() == [java.util.regex.Pattern]
size(this.patterns[]) == 1
regex.toString == orig(regex.toString)
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String, boolean):::ENTER
caseSensitive == true
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String, boolean):::EXIT
this.patterns[].getClass().getName() == [java.util.regex.Pattern]
size(this.patterns[]) == 1
regex.toString == orig(regex.toString)
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String[]):::ENTER
regexs.getClass().getName() == java.lang.String[].class
regexs[].toString one of { [^(5[1-5]\d{14})$, ^(2221\d{12})$, ^(222[2-9]\d{12})$, ^(22[3-9]\d{13})$, ^(2[3-6]\d{14})$, ^(27[01]\d{13})$, ^(2720\d{12})$], [^(6011\d{12})$, ^(64[4-9]\d{13})$, ^(65\d{14})$] }
size(regexs[]) one of { 3, 7 }
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String[]):::EXIT
regexs[] == orig(regexs[])
size(this.patterns[]) == orig(size(regexs[]))
this.patterns[].getClass().getName() one of { [java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern], [java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern, java.util.regex.Pattern] }
regexs[].toString one of { [^(5[1-5]\d{14})$, ^(2221\d{12})$, ^(222[2-9]\d{12})$, ^(22[3-9]\d{13})$, ^(2[3-6]\d{14})$, ^(27[01]\d{13})$, ^(2720\d{12})$], [^(6011\d{12})$, ^(64[4-9]\d{13})$, ^(65\d{14})$] }
size(this.patterns[]) one of { 3, 7 }
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String[], boolean):::ENTER
regexs != null
regexs.getClass().getName() == java.lang.String[].class
regexs[] elements != null
caseSensitive == true
size(regexs[]) one of { 1, 3, 7 }
===========================================================================
org.apache.commons.validator.routines.RegexValidator.RegexValidator(java.lang.String[], boolean):::EXIT
regexs[] == orig(regexs[])
size(this.patterns[]) == orig(size(regexs[]))
regexs[] elements != null
org.apache.commons.validator.routines.RegexValidator.serialVersionUID < size(regexs[])-1
this.patterns.getClass().getName() != orig(regexs.getClass().getName())
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::ENTER
value != null
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::EXIT147
return == true
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::EXIT147;condition="return == true"
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::EXIT150
return == false
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::EXIT150;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::EXIT
this.patterns == orig(this.patterns)
this.patterns[] == orig(this.patterns[])
this.patterns.getClass().getName() == orig(this.patterns.getClass().getName())
value.toString == orig(value.toString)
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
org.apache.commons.validator.routines.RegexValidator.isValid(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.validator.routines.RegexValidator.match(java.lang.String):::ENTER
this.patterns[].getClass().getName() == [java.util.regex.Pattern]
value != null
size(this.patterns[]) == 1
===========================================================================
org.apache.commons.validator.routines.RegexValidator.match(java.lang.String):::EXIT173
===========================================================================
org.apache.commons.validator.routines.RegexValidator.match(java.lang.String):::EXIT
this.patterns == orig(this.patterns)
this.patterns[] == orig(this.patterns[])
size(this.patterns[]) == size(return[])
size(return[]) == orig(size(this.patterns[]))
this.patterns[].getClass().getName() == [java.util.regex.Pattern]
return != null
return.getClass().getName() == java.lang.String[].class
return[] elements != null
size(return[]) == 1
this.patterns.getClass().getName() != return.getClass().getName()
this.patterns.getClass().getName() == orig(this.patterns.getClass().getName())
value.toString in return[].toString
value.toString == orig(value.toString)
orig(value) in return[]
return[] elements == orig(value)
===========================================================================
org.apache.commons.validator.routines.RegexValidator.validate(java.lang.String):::ENTER
value != null
===========================================================================
org.apache.commons.validator.routines.RegexValidator.validate(java.lang.String):::EXIT197
return == orig(value)
return != null
value.toString == return.toString
===========================================================================
org.apache.commons.validator.routines.RegexValidator.validate(java.lang.String):::EXIT206
this.patterns[].getClass().getName() == [java.util.regex.Pattern]
return != null
size(this.patterns[]) == 1
===========================================================================
org.apache.commons.validator.routines.RegexValidator.validate(java.lang.String):::EXIT209
return == null
===========================================================================
org.apache.commons.validator.routines.RegexValidator.validate(java.lang.String):::EXIT
this.patterns == orig(this.patterns)
this.patterns[] == orig(this.patterns[])
this.patterns.getClass().getName() == orig(this.patterns.getClass().getName())
value.toString <= return.toString
value.toString == orig(value.toString)
===========================================================================
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit:::CLASS
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT has only one value
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT != null
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT has only one value
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT != null
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] == [2, 1]
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] elements one of { 1, 2 }
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] sorted by >
size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[]) == 2
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] elements > org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.serialVersionUID
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] elements < org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] elements <= size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])
size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[]) in org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[]
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] elements >= size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])-1
size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])-1 in org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[]
===========================================================================
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit:::OBJECT
this has only one value
this.modulus == 10
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] elements < this.modulus
===========================================================================
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LuhnCheckDigit():::EXIT
===========================================================================
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.weightedValue(int, int, int):::ENTER
charValue >= 0
leftPos >= 1
rightPos >= 1
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.serialVersionUID < charValue
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.serialVersionUID < leftPos
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.serialVersionUID < rightPos
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > charValue
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > leftPos
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > rightPos
this.modulus > charValue
leftPos >= size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])-1
rightPos >= size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])-1
===========================================================================
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.weightedValue(int, int, int):::EXIT
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT == orig(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT)
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT == orig(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT)
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[] == orig(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])
this.modulus == orig(this.modulus)
return >= 0
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.serialVersionUID < return
org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT.getClass().getName() == orig(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.LUHN_CHECK_DIGIT.getClass().getName())
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > return
this.modulus > return
this.modulus > orig(charValue)
orig(leftPos) >= size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])-1
orig(rightPos) >= size(org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.POSITION_WEIGHT[])-1
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit:::CLASS
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit:::OBJECT
this has only one value
this.getClass().getName() == org.apache.commons.validator.routines.checkdigit.LuhnCheckDigit.class
this.modulus == 10
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.ModulusCheckDigit(int):::ENTER
modulus == 10
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.ModulusCheckDigit(int):::EXIT
this.modulus == orig(modulus)
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(java.lang.String, boolean):::ENTER
code != null
includesCheckDigit == true
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(java.lang.String, boolean):::EXIT
this.modulus == orig(this.modulus)
return >= 0
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > return
this.modulus > return
code.toString == orig(code.toString)
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::ENTER
code != null
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::EXIT76
return == true
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::EXIT76;condition="return == true"
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::EXIT77
return == false
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::EXIT77;condition="not(return == true)"
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::EXIT
this.modulus == orig(this.modulus)
code.toString == orig(code.toString)
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.toInt(char, int, int):::ENTER
leftPos >= 1
rightPos >= 1
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > character
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > leftPos
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > rightPos
this.modulus < character
character > leftPos
character > rightPos
===========================================================================
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.toInt(char, int, int):::EXIT
this.modulus == orig(this.modulus)
return >= 0
org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.serialVersionUID > return
this.modulus > return
this.modulus < orig(character)
return - orig(character) + 48 == 0
